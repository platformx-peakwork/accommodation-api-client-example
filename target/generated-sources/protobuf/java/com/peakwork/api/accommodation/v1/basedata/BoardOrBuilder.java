// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basedata.proto

package com.peakwork.api.accommodation.v1.basedata;

public interface BoardOrBuilder extends
    // @@protoc_insertion_point(interface_extends:peakwork.api.accommodation.v1.basedata.Board)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * mandatory - Identifies a board within the scope of one supplier, i.e. it must be unique per supplier. A supplier
   * can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same
   * board from the supplier's system has the same board_identifier, whenever it is referenced in the Accommodation API.
   *  This is especially important, when updating rate data. Data of a rate with the same identifier will be replaced,
   * since they are considered to reference the same rate entity.
   * </pre>
   *
   * <code>string board_identifier = 1;</code>
   */
  java.lang.String getBoardIdentifier();
  /**
   * <pre>
   * mandatory - Identifies a board within the scope of one supplier, i.e. it must be unique per supplier. A supplier
   * can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same
   * board from the supplier's system has the same board_identifier, whenever it is referenced in the Accommodation API.
   *  This is especially important, when updating rate data. Data of a rate with the same identifier will be replaced,
   * since they are considered to reference the same rate entity.
   * </pre>
   *
   * <code>string board_identifier = 1;</code>
   */
  com.google.protobuf.ByteString
      getBoardIdentifierBytes();

  /**
   * <pre>
   * mandatory - The names of the board in multiple languages as a map. At least one name must be given.
   * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
   * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
   * - value (string): the name of the board in the corresponding language
   * </pre>
   *
   * <code>map&lt;string, string&gt; name = 2;</code>
   */
  int getNameCount();
  /**
   * <pre>
   * mandatory - The names of the board in multiple languages as a map. At least one name must be given.
   * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
   * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
   * - value (string): the name of the board in the corresponding language
   * </pre>
   *
   * <code>map&lt;string, string&gt; name = 2;</code>
   */
  boolean containsName(
      java.lang.String key);
  /**
   * Use {@link #getNameMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getName();
  /**
   * <pre>
   * mandatory - The names of the board in multiple languages as a map. At least one name must be given.
   * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
   * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
   * - value (string): the name of the board in the corresponding language
   * </pre>
   *
   * <code>map&lt;string, string&gt; name = 2;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getNameMap();
  /**
   * <pre>
   * mandatory - The names of the board in multiple languages as a map. At least one name must be given.
   * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
   * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
   * - value (string): the name of the board in the corresponding language
   * </pre>
   *
   * <code>map&lt;string, string&gt; name = 2;</code>
   */

  java.lang.String getNameOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * mandatory - The names of the board in multiple languages as a map. At least one name must be given.
   * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
   * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
   * - value (string): the name of the board in the corresponding language
   * </pre>
   *
   * <code>map&lt;string, string&gt; name = 2;</code>
   */

  java.lang.String getNameOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * mandatory - List of DRV GlobalTypes giving meta information about the board.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 3;</code>
   */
  java.util.List<com.peakwork.api.accommodation.v1.common.GlobalType> 
      getGlobalTypesList();
  /**
   * <pre>
   * mandatory - List of DRV GlobalTypes giving meta information about the board.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 3;</code>
   */
  com.peakwork.api.accommodation.v1.common.GlobalType getGlobalTypes(int index);
  /**
   * <pre>
   * mandatory - List of DRV GlobalTypes giving meta information about the board.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 3;</code>
   */
  int getGlobalTypesCount();
  /**
   * <pre>
   * mandatory - List of DRV GlobalTypes giving meta information about the board.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 3;</code>
   */
  java.util.List<? extends com.peakwork.api.accommodation.v1.common.GlobalTypeOrBuilder> 
      getGlobalTypesOrBuilderList();
  /**
   * <pre>
   * mandatory - List of DRV GlobalTypes giving meta information about the board.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 3;</code>
   */
  com.peakwork.api.accommodation.v1.common.GlobalTypeOrBuilder getGlobalTypesOrBuilder(
      int index);

  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this board is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 4;</code>
   */
  int getBookingPayloadCount();
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this board is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 4;</code>
   */
  boolean containsBookingPayload(
      java.lang.String key);
  /**
   * Use {@link #getBookingPayloadMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getBookingPayload();
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this board is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 4;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getBookingPayloadMap();
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this board is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 4;</code>
   */

  java.lang.String getBookingPayloadOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this board is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 4;</code>
   */

  java.lang.String getBookingPayloadOrThrow(
      java.lang.String key);
}
