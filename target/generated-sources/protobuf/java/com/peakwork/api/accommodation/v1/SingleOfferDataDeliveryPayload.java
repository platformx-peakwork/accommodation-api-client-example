// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: accommodation-api.proto

package com.peakwork.api.accommodation.v1;

/**
 * <pre>
 * Contains offer data for a single offer, i.e. a combination of an accommodation, rate, room, board, arrival date and
 * length of stay.
 * Keys: accommodation_identifier, rate_identifier, room_identifier, board_identifier, arrivalDate, offer_value
 * Values: offer_value, price_sets
 * Offer data information is given in offer_value. The prices in offer_value may reference data in price_sets.
 * price_sets is to be used as a lookup table for data in offer_value and is intended for reuse within offer_value for
 * data size optimization.
 * </pre>
 *
 * Protobuf type {@code peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload}
 */
public  final class SingleOfferDataDeliveryPayload extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload)
    SingleOfferDataDeliveryPayloadOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SingleOfferDataDeliveryPayload.newBuilder() to construct.
  private SingleOfferDataDeliveryPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SingleOfferDataDeliveryPayload() {
    accommodationIdentifier_ = "";
    rateIdentifier_ = "";
    roomIdentifier_ = "";
    boardIdentifier_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SingleOfferDataDeliveryPayload(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            accommodationIdentifier_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            roomIdentifier_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            boardIdentifier_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            rateIdentifier_ = s;
            break;
          }
          case 42: {
            com.google.type.Date.Builder subBuilder = null;
            if (arrivalDate_ != null) {
              subBuilder = arrivalDate_.toBuilder();
            }
            arrivalDate_ = input.readMessage(com.google.type.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(arrivalDate_);
              arrivalDate_ = subBuilder.buildPartial();
            }

            break;
          }
          case 48: {

            los_ = input.readUInt32();
            break;
          }
          case 58: {
            com.peakwork.api.accommodation.v1.offerdata.OfferValue.Builder subBuilder = null;
            if (offerValue_ != null) {
              subBuilder = offerValue_.toBuilder();
            }
            offerValue_ = input.readMessage(com.peakwork.api.accommodation.v1.offerdata.OfferValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(offerValue_);
              offerValue_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000080) != 0)) {
              priceSets_ = com.google.protobuf.MapField.newMapField(
                  PriceSetsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000080;
            }
            com.google.protobuf.MapEntry<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet>
            priceSets__ = input.readMessage(
                PriceSetsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            priceSets_.getMutableMap().put(
                priceSets__.getKey(), priceSets__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.peakwork.api.accommodation.v1.AccommodationApi.internal_static_peakwork_api_accommodation_v1_SingleOfferDataDeliveryPayload_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 8:
        return internalGetPriceSets();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.peakwork.api.accommodation.v1.AccommodationApi.internal_static_peakwork_api_accommodation_v1_SingleOfferDataDeliveryPayload_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload.class, com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload.Builder.class);
  }

  private int bitField0_;
  public static final int ACCOMMODATION_IDENTIFIER_FIELD_NUMBER = 1;
  private volatile java.lang.Object accommodationIdentifier_;
  /**
   * <pre>
   * mandatory - Identifier for the accommodation used by the supplier. This identifier references an accommodation
   * entity (supplierAccommodationId) from the BaseDataService. See supplierAccommodationId of Accommodation.
   * The offer information of this message is valid for the referenced accommodation only.
   * </pre>
   *
   * <code>string accommodation_identifier = 1;</code>
   */
  public java.lang.String getAccommodationIdentifier() {
    java.lang.Object ref = accommodationIdentifier_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      accommodationIdentifier_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * mandatory - Identifier for the accommodation used by the supplier. This identifier references an accommodation
   * entity (supplierAccommodationId) from the BaseDataService. See supplierAccommodationId of Accommodation.
   * The offer information of this message is valid for the referenced accommodation only.
   * </pre>
   *
   * <code>string accommodation_identifier = 1;</code>
   */
  public com.google.protobuf.ByteString
      getAccommodationIdentifierBytes() {
    java.lang.Object ref = accommodationIdentifier_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      accommodationIdentifier_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RATE_IDENTIFIER_FIELD_NUMBER = 4;
  private volatile java.lang.Object rateIdentifier_;
  /**
   * <pre>
   * mandatory - Identifier for the rate used by the supplier. This identifier references a rate
   * entity (rateIdentifier) from the BaseDataService. See rateIdentifier of Rate.
   * The offer information of this message is valid for the referenced rate only.
   * </pre>
   *
   * <code>string rate_identifier = 4;</code>
   */
  public java.lang.String getRateIdentifier() {
    java.lang.Object ref = rateIdentifier_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      rateIdentifier_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * mandatory - Identifier for the rate used by the supplier. This identifier references a rate
   * entity (rateIdentifier) from the BaseDataService. See rateIdentifier of Rate.
   * The offer information of this message is valid for the referenced rate only.
   * </pre>
   *
   * <code>string rate_identifier = 4;</code>
   */
  public com.google.protobuf.ByteString
      getRateIdentifierBytes() {
    java.lang.Object ref = rateIdentifier_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      rateIdentifier_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ROOM_IDENTIFIER_FIELD_NUMBER = 2;
  private volatile java.lang.Object roomIdentifier_;
  /**
   * <pre>
   * mandatory - Identifier for the room used by the supplier. This identifier references a room
   * entity (roomIdentifier) from the BaseDataService. See roomIdentifier of Room.
   * The offer information of this message is valid for the referenced room only.
   * </pre>
   *
   * <code>string room_identifier = 2;</code>
   */
  public java.lang.String getRoomIdentifier() {
    java.lang.Object ref = roomIdentifier_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      roomIdentifier_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * mandatory - Identifier for the room used by the supplier. This identifier references a room
   * entity (roomIdentifier) from the BaseDataService. See roomIdentifier of Room.
   * The offer information of this message is valid for the referenced room only.
   * </pre>
   *
   * <code>string room_identifier = 2;</code>
   */
  public com.google.protobuf.ByteString
      getRoomIdentifierBytes() {
    java.lang.Object ref = roomIdentifier_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      roomIdentifier_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BOARD_IDENTIFIER_FIELD_NUMBER = 3;
  private volatile java.lang.Object boardIdentifier_;
  /**
   * <pre>
   * mandatory - Identifier for the board used by the supplier. This identifier references a board
   * entity (boardIdentifier) from the BaseDataService. See boardIdentifier of Board.
   * The offer information of this message is valid for the referenced board only.
   * </pre>
   *
   * <code>string board_identifier = 3;</code>
   */
  public java.lang.String getBoardIdentifier() {
    java.lang.Object ref = boardIdentifier_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      boardIdentifier_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * mandatory - Identifier for the board used by the supplier. This identifier references a board
   * entity (boardIdentifier) from the BaseDataService. See boardIdentifier of Board.
   * The offer information of this message is valid for the referenced board only.
   * </pre>
   *
   * <code>string board_identifier = 3;</code>
   */
  public com.google.protobuf.ByteString
      getBoardIdentifierBytes() {
    java.lang.Object ref = boardIdentifier_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      boardIdentifier_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ARRIVALDATE_FIELD_NUMBER = 5;
  private com.google.type.Date arrivalDate_;
  /**
   * <pre>
   * mandatory - The arrival date, that the offer information is valid for. The prices will only be changed for the
   * given arrival date.
   * </pre>
   *
   * <code>.google.type.Date arrivalDate = 5;</code>
   */
  public boolean hasArrivalDate() {
    return arrivalDate_ != null;
  }
  /**
   * <pre>
   * mandatory - The arrival date, that the offer information is valid for. The prices will only be changed for the
   * given arrival date.
   * </pre>
   *
   * <code>.google.type.Date arrivalDate = 5;</code>
   */
  public com.google.type.Date getArrivalDate() {
    return arrivalDate_ == null ? com.google.type.Date.getDefaultInstance() : arrivalDate_;
  }
  /**
   * <pre>
   * mandatory - The arrival date, that the offer information is valid for. The prices will only be changed for the
   * given arrival date.
   * </pre>
   *
   * <code>.google.type.Date arrivalDate = 5;</code>
   */
  public com.google.type.DateOrBuilder getArrivalDateOrBuilder() {
    return getArrivalDate();
  }

  public static final int LOS_FIELD_NUMBER = 6;
  private int los_;
  /**
   * <pre>
   * mandatory - The lengths of stay (LOSs), that the offer information is valid for. The prices will only be changed for the
   * given length of stay.
   * </pre>
   *
   * <code>uint32 los = 6;</code>
   */
  public int getLos() {
    return los_;
  }

  public static final int OFFER_VALUE_FIELD_NUMBER = 7;
  private com.peakwork.api.accommodation.v1.offerdata.OfferValue offerValue_;
  /**
   * <pre>
   * mandatory - The offer information including most importantly the price information about the single offer. The
   * offer information is valid only for the given key combination of accommodation, rate, room, board, arrival date and
   * length of stay. The offer value contains price information in form of references to price_sets.
   * See OfferValue for more details.
   * </pre>
   *
   * <code>.peakwork.api.accommodation.v1.offerdata.OfferValue offer_value = 7;</code>
   */
  public boolean hasOfferValue() {
    return offerValue_ != null;
  }
  /**
   * <pre>
   * mandatory - The offer information including most importantly the price information about the single offer. The
   * offer information is valid only for the given key combination of accommodation, rate, room, board, arrival date and
   * length of stay. The offer value contains price information in form of references to price_sets.
   * See OfferValue for more details.
   * </pre>
   *
   * <code>.peakwork.api.accommodation.v1.offerdata.OfferValue offer_value = 7;</code>
   */
  public com.peakwork.api.accommodation.v1.offerdata.OfferValue getOfferValue() {
    return offerValue_ == null ? com.peakwork.api.accommodation.v1.offerdata.OfferValue.getDefaultInstance() : offerValue_;
  }
  /**
   * <pre>
   * mandatory - The offer information including most importantly the price information about the single offer. The
   * offer information is valid only for the given key combination of accommodation, rate, room, board, arrival date and
   * length of stay. The offer value contains price information in form of references to price_sets.
   * See OfferValue for more details.
   * </pre>
   *
   * <code>.peakwork.api.accommodation.v1.offerdata.OfferValue offer_value = 7;</code>
   */
  public com.peakwork.api.accommodation.v1.offerdata.OfferValueOrBuilder getOfferValueOrBuilder() {
    return getOfferValue();
  }

  public static final int PRICE_SETS_FIELD_NUMBER = 8;
  private static final class PriceSetsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet>newDefaultInstance(
                com.peakwork.api.accommodation.v1.AccommodationApi.internal_static_peakwork_api_accommodation_v1_SingleOfferDataDeliveryPayload_PriceSetsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.peakwork.api.accommodation.v1.offerdata.PriceSet.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet> priceSets_;
  private com.google.protobuf.MapField<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet>
  internalGetPriceSets() {
    if (priceSets_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          PriceSetsDefaultEntryHolder.defaultEntry);
    }
    return priceSets_;
  }

  public int getPriceSetsCount() {
    return internalGetPriceSets().getMap().size();
  }
  /**
   * <pre>
   * mandatory - Map of all PriceSets used in this message. The price sets are referenced by the offer_value via a
   * unique numeric key (uint32). This key is bound to a specific message and can be arbitrarily chosen. This means
   * a key for a price set in one message can be different for the same price set in a different message. It does not
   * serve as a permanent identifier of a price set.
   * A price set can be referenced multiple times from an offer_value in order to reuse the pricing structure in it. The
   * purpose is to optimize the data size by not duplicating the same price data multiple times (e.g. for the same
   * price on consecutive days of the stay).
   * See PriceSet for more details.
   * </pre>
   *
   * <code>map&lt;uint32, .peakwork.api.accommodation.v1.offerdata.PriceSet&gt; price_sets = 8;</code>
   */

  public boolean containsPriceSets(
      int key) {
    
    return internalGetPriceSets().getMap().containsKey(key);
  }
  /**
   * Use {@link #getPriceSetsMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet> getPriceSets() {
    return getPriceSetsMap();
  }
  /**
   * <pre>
   * mandatory - Map of all PriceSets used in this message. The price sets are referenced by the offer_value via a
   * unique numeric key (uint32). This key is bound to a specific message and can be arbitrarily chosen. This means
   * a key for a price set in one message can be different for the same price set in a different message. It does not
   * serve as a permanent identifier of a price set.
   * A price set can be referenced multiple times from an offer_value in order to reuse the pricing structure in it. The
   * purpose is to optimize the data size by not duplicating the same price data multiple times (e.g. for the same
   * price on consecutive days of the stay).
   * See PriceSet for more details.
   * </pre>
   *
   * <code>map&lt;uint32, .peakwork.api.accommodation.v1.offerdata.PriceSet&gt; price_sets = 8;</code>
   */

  public java.util.Map<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet> getPriceSetsMap() {
    return internalGetPriceSets().getMap();
  }
  /**
   * <pre>
   * mandatory - Map of all PriceSets used in this message. The price sets are referenced by the offer_value via a
   * unique numeric key (uint32). This key is bound to a specific message and can be arbitrarily chosen. This means
   * a key for a price set in one message can be different for the same price set in a different message. It does not
   * serve as a permanent identifier of a price set.
   * A price set can be referenced multiple times from an offer_value in order to reuse the pricing structure in it. The
   * purpose is to optimize the data size by not duplicating the same price data multiple times (e.g. for the same
   * price on consecutive days of the stay).
   * See PriceSet for more details.
   * </pre>
   *
   * <code>map&lt;uint32, .peakwork.api.accommodation.v1.offerdata.PriceSet&gt; price_sets = 8;</code>
   */

  public com.peakwork.api.accommodation.v1.offerdata.PriceSet getPriceSetsOrDefault(
      int key,
      com.peakwork.api.accommodation.v1.offerdata.PriceSet defaultValue) {
    
    java.util.Map<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet> map =
        internalGetPriceSets().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * mandatory - Map of all PriceSets used in this message. The price sets are referenced by the offer_value via a
   * unique numeric key (uint32). This key is bound to a specific message and can be arbitrarily chosen. This means
   * a key for a price set in one message can be different for the same price set in a different message. It does not
   * serve as a permanent identifier of a price set.
   * A price set can be referenced multiple times from an offer_value in order to reuse the pricing structure in it. The
   * purpose is to optimize the data size by not duplicating the same price data multiple times (e.g. for the same
   * price on consecutive days of the stay).
   * See PriceSet for more details.
   * </pre>
   *
   * <code>map&lt;uint32, .peakwork.api.accommodation.v1.offerdata.PriceSet&gt; price_sets = 8;</code>
   */

  public com.peakwork.api.accommodation.v1.offerdata.PriceSet getPriceSetsOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet> map =
        internalGetPriceSets().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getAccommodationIdentifierBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, accommodationIdentifier_);
    }
    if (!getRoomIdentifierBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, roomIdentifier_);
    }
    if (!getBoardIdentifierBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, boardIdentifier_);
    }
    if (!getRateIdentifierBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, rateIdentifier_);
    }
    if (arrivalDate_ != null) {
      output.writeMessage(5, getArrivalDate());
    }
    if (los_ != 0) {
      output.writeUInt32(6, los_);
    }
    if (offerValue_ != null) {
      output.writeMessage(7, getOfferValue());
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetPriceSets(),
        PriceSetsDefaultEntryHolder.defaultEntry,
        8);
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getAccommodationIdentifierBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, accommodationIdentifier_);
    }
    if (!getRoomIdentifierBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, roomIdentifier_);
    }
    if (!getBoardIdentifierBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, boardIdentifier_);
    }
    if (!getRateIdentifierBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, rateIdentifier_);
    }
    if (arrivalDate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getArrivalDate());
    }
    if (los_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, los_);
    }
    if (offerValue_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getOfferValue());
    }
    for (java.util.Map.Entry<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet> entry
         : internalGetPriceSets().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet>
      priceSets__ = PriceSetsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, priceSets__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload)) {
      return super.equals(obj);
    }
    com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload other = (com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload) obj;

    if (!getAccommodationIdentifier()
        .equals(other.getAccommodationIdentifier())) return false;
    if (!getRateIdentifier()
        .equals(other.getRateIdentifier())) return false;
    if (!getRoomIdentifier()
        .equals(other.getRoomIdentifier())) return false;
    if (!getBoardIdentifier()
        .equals(other.getBoardIdentifier())) return false;
    if (hasArrivalDate() != other.hasArrivalDate()) return false;
    if (hasArrivalDate()) {
      if (!getArrivalDate()
          .equals(other.getArrivalDate())) return false;
    }
    if (getLos()
        != other.getLos()) return false;
    if (hasOfferValue() != other.hasOfferValue()) return false;
    if (hasOfferValue()) {
      if (!getOfferValue()
          .equals(other.getOfferValue())) return false;
    }
    if (!internalGetPriceSets().equals(
        other.internalGetPriceSets())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ACCOMMODATION_IDENTIFIER_FIELD_NUMBER;
    hash = (53 * hash) + getAccommodationIdentifier().hashCode();
    hash = (37 * hash) + RATE_IDENTIFIER_FIELD_NUMBER;
    hash = (53 * hash) + getRateIdentifier().hashCode();
    hash = (37 * hash) + ROOM_IDENTIFIER_FIELD_NUMBER;
    hash = (53 * hash) + getRoomIdentifier().hashCode();
    hash = (37 * hash) + BOARD_IDENTIFIER_FIELD_NUMBER;
    hash = (53 * hash) + getBoardIdentifier().hashCode();
    if (hasArrivalDate()) {
      hash = (37 * hash) + ARRIVALDATE_FIELD_NUMBER;
      hash = (53 * hash) + getArrivalDate().hashCode();
    }
    hash = (37 * hash) + LOS_FIELD_NUMBER;
    hash = (53 * hash) + getLos();
    if (hasOfferValue()) {
      hash = (37 * hash) + OFFER_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getOfferValue().hashCode();
    }
    if (!internalGetPriceSets().getMap().isEmpty()) {
      hash = (37 * hash) + PRICE_SETS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetPriceSets().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Contains offer data for a single offer, i.e. a combination of an accommodation, rate, room, board, arrival date and
   * length of stay.
   * Keys: accommodation_identifier, rate_identifier, room_identifier, board_identifier, arrivalDate, offer_value
   * Values: offer_value, price_sets
   * Offer data information is given in offer_value. The prices in offer_value may reference data in price_sets.
   * price_sets is to be used as a lookup table for data in offer_value and is intended for reuse within offer_value for
   * data size optimization.
   * </pre>
   *
   * Protobuf type {@code peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload)
      com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayloadOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.peakwork.api.accommodation.v1.AccommodationApi.internal_static_peakwork_api_accommodation_v1_SingleOfferDataDeliveryPayload_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 8:
          return internalGetPriceSets();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 8:
          return internalGetMutablePriceSets();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.peakwork.api.accommodation.v1.AccommodationApi.internal_static_peakwork_api_accommodation_v1_SingleOfferDataDeliveryPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload.class, com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload.Builder.class);
    }

    // Construct using com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      accommodationIdentifier_ = "";

      rateIdentifier_ = "";

      roomIdentifier_ = "";

      boardIdentifier_ = "";

      if (arrivalDateBuilder_ == null) {
        arrivalDate_ = null;
      } else {
        arrivalDate_ = null;
        arrivalDateBuilder_ = null;
      }
      los_ = 0;

      if (offerValueBuilder_ == null) {
        offerValue_ = null;
      } else {
        offerValue_ = null;
        offerValueBuilder_ = null;
      }
      internalGetMutablePriceSets().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.peakwork.api.accommodation.v1.AccommodationApi.internal_static_peakwork_api_accommodation_v1_SingleOfferDataDeliveryPayload_descriptor;
    }

    @java.lang.Override
    public com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload getDefaultInstanceForType() {
      return com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload.getDefaultInstance();
    }

    @java.lang.Override
    public com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload build() {
      com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload buildPartial() {
      com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload result = new com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.accommodationIdentifier_ = accommodationIdentifier_;
      result.rateIdentifier_ = rateIdentifier_;
      result.roomIdentifier_ = roomIdentifier_;
      result.boardIdentifier_ = boardIdentifier_;
      if (arrivalDateBuilder_ == null) {
        result.arrivalDate_ = arrivalDate_;
      } else {
        result.arrivalDate_ = arrivalDateBuilder_.build();
      }
      result.los_ = los_;
      if (offerValueBuilder_ == null) {
        result.offerValue_ = offerValue_;
      } else {
        result.offerValue_ = offerValueBuilder_.build();
      }
      result.priceSets_ = internalGetPriceSets();
      result.priceSets_.makeImmutable();
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload) {
        return mergeFrom((com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload other) {
      if (other == com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload.getDefaultInstance()) return this;
      if (!other.getAccommodationIdentifier().isEmpty()) {
        accommodationIdentifier_ = other.accommodationIdentifier_;
        onChanged();
      }
      if (!other.getRateIdentifier().isEmpty()) {
        rateIdentifier_ = other.rateIdentifier_;
        onChanged();
      }
      if (!other.getRoomIdentifier().isEmpty()) {
        roomIdentifier_ = other.roomIdentifier_;
        onChanged();
      }
      if (!other.getBoardIdentifier().isEmpty()) {
        boardIdentifier_ = other.boardIdentifier_;
        onChanged();
      }
      if (other.hasArrivalDate()) {
        mergeArrivalDate(other.getArrivalDate());
      }
      if (other.getLos() != 0) {
        setLos(other.getLos());
      }
      if (other.hasOfferValue()) {
        mergeOfferValue(other.getOfferValue());
      }
      internalGetMutablePriceSets().mergeFrom(
          other.internalGetPriceSets());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object accommodationIdentifier_ = "";
    /**
     * <pre>
     * mandatory - Identifier for the accommodation used by the supplier. This identifier references an accommodation
     * entity (supplierAccommodationId) from the BaseDataService. See supplierAccommodationId of Accommodation.
     * The offer information of this message is valid for the referenced accommodation only.
     * </pre>
     *
     * <code>string accommodation_identifier = 1;</code>
     */
    public java.lang.String getAccommodationIdentifier() {
      java.lang.Object ref = accommodationIdentifier_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        accommodationIdentifier_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * mandatory - Identifier for the accommodation used by the supplier. This identifier references an accommodation
     * entity (supplierAccommodationId) from the BaseDataService. See supplierAccommodationId of Accommodation.
     * The offer information of this message is valid for the referenced accommodation only.
     * </pre>
     *
     * <code>string accommodation_identifier = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAccommodationIdentifierBytes() {
      java.lang.Object ref = accommodationIdentifier_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accommodationIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * mandatory - Identifier for the accommodation used by the supplier. This identifier references an accommodation
     * entity (supplierAccommodationId) from the BaseDataService. See supplierAccommodationId of Accommodation.
     * The offer information of this message is valid for the referenced accommodation only.
     * </pre>
     *
     * <code>string accommodation_identifier = 1;</code>
     */
    public Builder setAccommodationIdentifier(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      accommodationIdentifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Identifier for the accommodation used by the supplier. This identifier references an accommodation
     * entity (supplierAccommodationId) from the BaseDataService. See supplierAccommodationId of Accommodation.
     * The offer information of this message is valid for the referenced accommodation only.
     * </pre>
     *
     * <code>string accommodation_identifier = 1;</code>
     */
    public Builder clearAccommodationIdentifier() {
      
      accommodationIdentifier_ = getDefaultInstance().getAccommodationIdentifier();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Identifier for the accommodation used by the supplier. This identifier references an accommodation
     * entity (supplierAccommodationId) from the BaseDataService. See supplierAccommodationId of Accommodation.
     * The offer information of this message is valid for the referenced accommodation only.
     * </pre>
     *
     * <code>string accommodation_identifier = 1;</code>
     */
    public Builder setAccommodationIdentifierBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      accommodationIdentifier_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object rateIdentifier_ = "";
    /**
     * <pre>
     * mandatory - Identifier for the rate used by the supplier. This identifier references a rate
     * entity (rateIdentifier) from the BaseDataService. See rateIdentifier of Rate.
     * The offer information of this message is valid for the referenced rate only.
     * </pre>
     *
     * <code>string rate_identifier = 4;</code>
     */
    public java.lang.String getRateIdentifier() {
      java.lang.Object ref = rateIdentifier_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rateIdentifier_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * mandatory - Identifier for the rate used by the supplier. This identifier references a rate
     * entity (rateIdentifier) from the BaseDataService. See rateIdentifier of Rate.
     * The offer information of this message is valid for the referenced rate only.
     * </pre>
     *
     * <code>string rate_identifier = 4;</code>
     */
    public com.google.protobuf.ByteString
        getRateIdentifierBytes() {
      java.lang.Object ref = rateIdentifier_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rateIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * mandatory - Identifier for the rate used by the supplier. This identifier references a rate
     * entity (rateIdentifier) from the BaseDataService. See rateIdentifier of Rate.
     * The offer information of this message is valid for the referenced rate only.
     * </pre>
     *
     * <code>string rate_identifier = 4;</code>
     */
    public Builder setRateIdentifier(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      rateIdentifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Identifier for the rate used by the supplier. This identifier references a rate
     * entity (rateIdentifier) from the BaseDataService. See rateIdentifier of Rate.
     * The offer information of this message is valid for the referenced rate only.
     * </pre>
     *
     * <code>string rate_identifier = 4;</code>
     */
    public Builder clearRateIdentifier() {
      
      rateIdentifier_ = getDefaultInstance().getRateIdentifier();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Identifier for the rate used by the supplier. This identifier references a rate
     * entity (rateIdentifier) from the BaseDataService. See rateIdentifier of Rate.
     * The offer information of this message is valid for the referenced rate only.
     * </pre>
     *
     * <code>string rate_identifier = 4;</code>
     */
    public Builder setRateIdentifierBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      rateIdentifier_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object roomIdentifier_ = "";
    /**
     * <pre>
     * mandatory - Identifier for the room used by the supplier. This identifier references a room
     * entity (roomIdentifier) from the BaseDataService. See roomIdentifier of Room.
     * The offer information of this message is valid for the referenced room only.
     * </pre>
     *
     * <code>string room_identifier = 2;</code>
     */
    public java.lang.String getRoomIdentifier() {
      java.lang.Object ref = roomIdentifier_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        roomIdentifier_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * mandatory - Identifier for the room used by the supplier. This identifier references a room
     * entity (roomIdentifier) from the BaseDataService. See roomIdentifier of Room.
     * The offer information of this message is valid for the referenced room only.
     * </pre>
     *
     * <code>string room_identifier = 2;</code>
     */
    public com.google.protobuf.ByteString
        getRoomIdentifierBytes() {
      java.lang.Object ref = roomIdentifier_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * mandatory - Identifier for the room used by the supplier. This identifier references a room
     * entity (roomIdentifier) from the BaseDataService. See roomIdentifier of Room.
     * The offer information of this message is valid for the referenced room only.
     * </pre>
     *
     * <code>string room_identifier = 2;</code>
     */
    public Builder setRoomIdentifier(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      roomIdentifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Identifier for the room used by the supplier. This identifier references a room
     * entity (roomIdentifier) from the BaseDataService. See roomIdentifier of Room.
     * The offer information of this message is valid for the referenced room only.
     * </pre>
     *
     * <code>string room_identifier = 2;</code>
     */
    public Builder clearRoomIdentifier() {
      
      roomIdentifier_ = getDefaultInstance().getRoomIdentifier();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Identifier for the room used by the supplier. This identifier references a room
     * entity (roomIdentifier) from the BaseDataService. See roomIdentifier of Room.
     * The offer information of this message is valid for the referenced room only.
     * </pre>
     *
     * <code>string room_identifier = 2;</code>
     */
    public Builder setRoomIdentifierBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      roomIdentifier_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object boardIdentifier_ = "";
    /**
     * <pre>
     * mandatory - Identifier for the board used by the supplier. This identifier references a board
     * entity (boardIdentifier) from the BaseDataService. See boardIdentifier of Board.
     * The offer information of this message is valid for the referenced board only.
     * </pre>
     *
     * <code>string board_identifier = 3;</code>
     */
    public java.lang.String getBoardIdentifier() {
      java.lang.Object ref = boardIdentifier_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        boardIdentifier_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * mandatory - Identifier for the board used by the supplier. This identifier references a board
     * entity (boardIdentifier) from the BaseDataService. See boardIdentifier of Board.
     * The offer information of this message is valid for the referenced board only.
     * </pre>
     *
     * <code>string board_identifier = 3;</code>
     */
    public com.google.protobuf.ByteString
        getBoardIdentifierBytes() {
      java.lang.Object ref = boardIdentifier_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        boardIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * mandatory - Identifier for the board used by the supplier. This identifier references a board
     * entity (boardIdentifier) from the BaseDataService. See boardIdentifier of Board.
     * The offer information of this message is valid for the referenced board only.
     * </pre>
     *
     * <code>string board_identifier = 3;</code>
     */
    public Builder setBoardIdentifier(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      boardIdentifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Identifier for the board used by the supplier. This identifier references a board
     * entity (boardIdentifier) from the BaseDataService. See boardIdentifier of Board.
     * The offer information of this message is valid for the referenced board only.
     * </pre>
     *
     * <code>string board_identifier = 3;</code>
     */
    public Builder clearBoardIdentifier() {
      
      boardIdentifier_ = getDefaultInstance().getBoardIdentifier();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Identifier for the board used by the supplier. This identifier references a board
     * entity (boardIdentifier) from the BaseDataService. See boardIdentifier of Board.
     * The offer information of this message is valid for the referenced board only.
     * </pre>
     *
     * <code>string board_identifier = 3;</code>
     */
    public Builder setBoardIdentifierBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      boardIdentifier_ = value;
      onChanged();
      return this;
    }

    private com.google.type.Date arrivalDate_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder> arrivalDateBuilder_;
    /**
     * <pre>
     * mandatory - The arrival date, that the offer information is valid for. The prices will only be changed for the
     * given arrival date.
     * </pre>
     *
     * <code>.google.type.Date arrivalDate = 5;</code>
     */
    public boolean hasArrivalDate() {
      return arrivalDateBuilder_ != null || arrivalDate_ != null;
    }
    /**
     * <pre>
     * mandatory - The arrival date, that the offer information is valid for. The prices will only be changed for the
     * given arrival date.
     * </pre>
     *
     * <code>.google.type.Date arrivalDate = 5;</code>
     */
    public com.google.type.Date getArrivalDate() {
      if (arrivalDateBuilder_ == null) {
        return arrivalDate_ == null ? com.google.type.Date.getDefaultInstance() : arrivalDate_;
      } else {
        return arrivalDateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * mandatory - The arrival date, that the offer information is valid for. The prices will only be changed for the
     * given arrival date.
     * </pre>
     *
     * <code>.google.type.Date arrivalDate = 5;</code>
     */
    public Builder setArrivalDate(com.google.type.Date value) {
      if (arrivalDateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        arrivalDate_ = value;
        onChanged();
      } else {
        arrivalDateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * mandatory - The arrival date, that the offer information is valid for. The prices will only be changed for the
     * given arrival date.
     * </pre>
     *
     * <code>.google.type.Date arrivalDate = 5;</code>
     */
    public Builder setArrivalDate(
        com.google.type.Date.Builder builderForValue) {
      if (arrivalDateBuilder_ == null) {
        arrivalDate_ = builderForValue.build();
        onChanged();
      } else {
        arrivalDateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * mandatory - The arrival date, that the offer information is valid for. The prices will only be changed for the
     * given arrival date.
     * </pre>
     *
     * <code>.google.type.Date arrivalDate = 5;</code>
     */
    public Builder mergeArrivalDate(com.google.type.Date value) {
      if (arrivalDateBuilder_ == null) {
        if (arrivalDate_ != null) {
          arrivalDate_ =
            com.google.type.Date.newBuilder(arrivalDate_).mergeFrom(value).buildPartial();
        } else {
          arrivalDate_ = value;
        }
        onChanged();
      } else {
        arrivalDateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * mandatory - The arrival date, that the offer information is valid for. The prices will only be changed for the
     * given arrival date.
     * </pre>
     *
     * <code>.google.type.Date arrivalDate = 5;</code>
     */
    public Builder clearArrivalDate() {
      if (arrivalDateBuilder_ == null) {
        arrivalDate_ = null;
        onChanged();
      } else {
        arrivalDate_ = null;
        arrivalDateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * mandatory - The arrival date, that the offer information is valid for. The prices will only be changed for the
     * given arrival date.
     * </pre>
     *
     * <code>.google.type.Date arrivalDate = 5;</code>
     */
    public com.google.type.Date.Builder getArrivalDateBuilder() {
      
      onChanged();
      return getArrivalDateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * mandatory - The arrival date, that the offer information is valid for. The prices will only be changed for the
     * given arrival date.
     * </pre>
     *
     * <code>.google.type.Date arrivalDate = 5;</code>
     */
    public com.google.type.DateOrBuilder getArrivalDateOrBuilder() {
      if (arrivalDateBuilder_ != null) {
        return arrivalDateBuilder_.getMessageOrBuilder();
      } else {
        return arrivalDate_ == null ?
            com.google.type.Date.getDefaultInstance() : arrivalDate_;
      }
    }
    /**
     * <pre>
     * mandatory - The arrival date, that the offer information is valid for. The prices will only be changed for the
     * given arrival date.
     * </pre>
     *
     * <code>.google.type.Date arrivalDate = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder> 
        getArrivalDateFieldBuilder() {
      if (arrivalDateBuilder_ == null) {
        arrivalDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>(
                getArrivalDate(),
                getParentForChildren(),
                isClean());
        arrivalDate_ = null;
      }
      return arrivalDateBuilder_;
    }

    private int los_ ;
    /**
     * <pre>
     * mandatory - The lengths of stay (LOSs), that the offer information is valid for. The prices will only be changed for the
     * given length of stay.
     * </pre>
     *
     * <code>uint32 los = 6;</code>
     */
    public int getLos() {
      return los_;
    }
    /**
     * <pre>
     * mandatory - The lengths of stay (LOSs), that the offer information is valid for. The prices will only be changed for the
     * given length of stay.
     * </pre>
     *
     * <code>uint32 los = 6;</code>
     */
    public Builder setLos(int value) {
      
      los_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - The lengths of stay (LOSs), that the offer information is valid for. The prices will only be changed for the
     * given length of stay.
     * </pre>
     *
     * <code>uint32 los = 6;</code>
     */
    public Builder clearLos() {
      
      los_ = 0;
      onChanged();
      return this;
    }

    private com.peakwork.api.accommodation.v1.offerdata.OfferValue offerValue_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.peakwork.api.accommodation.v1.offerdata.OfferValue, com.peakwork.api.accommodation.v1.offerdata.OfferValue.Builder, com.peakwork.api.accommodation.v1.offerdata.OfferValueOrBuilder> offerValueBuilder_;
    /**
     * <pre>
     * mandatory - The offer information including most importantly the price information about the single offer. The
     * offer information is valid only for the given key combination of accommodation, rate, room, board, arrival date and
     * length of stay. The offer value contains price information in form of references to price_sets.
     * See OfferValue for more details.
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.offerdata.OfferValue offer_value = 7;</code>
     */
    public boolean hasOfferValue() {
      return offerValueBuilder_ != null || offerValue_ != null;
    }
    /**
     * <pre>
     * mandatory - The offer information including most importantly the price information about the single offer. The
     * offer information is valid only for the given key combination of accommodation, rate, room, board, arrival date and
     * length of stay. The offer value contains price information in form of references to price_sets.
     * See OfferValue for more details.
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.offerdata.OfferValue offer_value = 7;</code>
     */
    public com.peakwork.api.accommodation.v1.offerdata.OfferValue getOfferValue() {
      if (offerValueBuilder_ == null) {
        return offerValue_ == null ? com.peakwork.api.accommodation.v1.offerdata.OfferValue.getDefaultInstance() : offerValue_;
      } else {
        return offerValueBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * mandatory - The offer information including most importantly the price information about the single offer. The
     * offer information is valid only for the given key combination of accommodation, rate, room, board, arrival date and
     * length of stay. The offer value contains price information in form of references to price_sets.
     * See OfferValue for more details.
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.offerdata.OfferValue offer_value = 7;</code>
     */
    public Builder setOfferValue(com.peakwork.api.accommodation.v1.offerdata.OfferValue value) {
      if (offerValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        offerValue_ = value;
        onChanged();
      } else {
        offerValueBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * mandatory - The offer information including most importantly the price information about the single offer. The
     * offer information is valid only for the given key combination of accommodation, rate, room, board, arrival date and
     * length of stay. The offer value contains price information in form of references to price_sets.
     * See OfferValue for more details.
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.offerdata.OfferValue offer_value = 7;</code>
     */
    public Builder setOfferValue(
        com.peakwork.api.accommodation.v1.offerdata.OfferValue.Builder builderForValue) {
      if (offerValueBuilder_ == null) {
        offerValue_ = builderForValue.build();
        onChanged();
      } else {
        offerValueBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * mandatory - The offer information including most importantly the price information about the single offer. The
     * offer information is valid only for the given key combination of accommodation, rate, room, board, arrival date and
     * length of stay. The offer value contains price information in form of references to price_sets.
     * See OfferValue for more details.
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.offerdata.OfferValue offer_value = 7;</code>
     */
    public Builder mergeOfferValue(com.peakwork.api.accommodation.v1.offerdata.OfferValue value) {
      if (offerValueBuilder_ == null) {
        if (offerValue_ != null) {
          offerValue_ =
            com.peakwork.api.accommodation.v1.offerdata.OfferValue.newBuilder(offerValue_).mergeFrom(value).buildPartial();
        } else {
          offerValue_ = value;
        }
        onChanged();
      } else {
        offerValueBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * mandatory - The offer information including most importantly the price information about the single offer. The
     * offer information is valid only for the given key combination of accommodation, rate, room, board, arrival date and
     * length of stay. The offer value contains price information in form of references to price_sets.
     * See OfferValue for more details.
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.offerdata.OfferValue offer_value = 7;</code>
     */
    public Builder clearOfferValue() {
      if (offerValueBuilder_ == null) {
        offerValue_ = null;
        onChanged();
      } else {
        offerValue_ = null;
        offerValueBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * mandatory - The offer information including most importantly the price information about the single offer. The
     * offer information is valid only for the given key combination of accommodation, rate, room, board, arrival date and
     * length of stay. The offer value contains price information in form of references to price_sets.
     * See OfferValue for more details.
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.offerdata.OfferValue offer_value = 7;</code>
     */
    public com.peakwork.api.accommodation.v1.offerdata.OfferValue.Builder getOfferValueBuilder() {
      
      onChanged();
      return getOfferValueFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * mandatory - The offer information including most importantly the price information about the single offer. The
     * offer information is valid only for the given key combination of accommodation, rate, room, board, arrival date and
     * length of stay. The offer value contains price information in form of references to price_sets.
     * See OfferValue for more details.
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.offerdata.OfferValue offer_value = 7;</code>
     */
    public com.peakwork.api.accommodation.v1.offerdata.OfferValueOrBuilder getOfferValueOrBuilder() {
      if (offerValueBuilder_ != null) {
        return offerValueBuilder_.getMessageOrBuilder();
      } else {
        return offerValue_ == null ?
            com.peakwork.api.accommodation.v1.offerdata.OfferValue.getDefaultInstance() : offerValue_;
      }
    }
    /**
     * <pre>
     * mandatory - The offer information including most importantly the price information about the single offer. The
     * offer information is valid only for the given key combination of accommodation, rate, room, board, arrival date and
     * length of stay. The offer value contains price information in form of references to price_sets.
     * See OfferValue for more details.
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.offerdata.OfferValue offer_value = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.peakwork.api.accommodation.v1.offerdata.OfferValue, com.peakwork.api.accommodation.v1.offerdata.OfferValue.Builder, com.peakwork.api.accommodation.v1.offerdata.OfferValueOrBuilder> 
        getOfferValueFieldBuilder() {
      if (offerValueBuilder_ == null) {
        offerValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.peakwork.api.accommodation.v1.offerdata.OfferValue, com.peakwork.api.accommodation.v1.offerdata.OfferValue.Builder, com.peakwork.api.accommodation.v1.offerdata.OfferValueOrBuilder>(
                getOfferValue(),
                getParentForChildren(),
                isClean());
        offerValue_ = null;
      }
      return offerValueBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet> priceSets_;
    private com.google.protobuf.MapField<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet>
    internalGetPriceSets() {
      if (priceSets_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PriceSetsDefaultEntryHolder.defaultEntry);
      }
      return priceSets_;
    }
    private com.google.protobuf.MapField<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet>
    internalGetMutablePriceSets() {
      onChanged();;
      if (priceSets_ == null) {
        priceSets_ = com.google.protobuf.MapField.newMapField(
            PriceSetsDefaultEntryHolder.defaultEntry);
      }
      if (!priceSets_.isMutable()) {
        priceSets_ = priceSets_.copy();
      }
      return priceSets_;
    }

    public int getPriceSetsCount() {
      return internalGetPriceSets().getMap().size();
    }
    /**
     * <pre>
     * mandatory - Map of all PriceSets used in this message. The price sets are referenced by the offer_value via a
     * unique numeric key (uint32). This key is bound to a specific message and can be arbitrarily chosen. This means
     * a key for a price set in one message can be different for the same price set in a different message. It does not
     * serve as a permanent identifier of a price set.
     * A price set can be referenced multiple times from an offer_value in order to reuse the pricing structure in it. The
     * purpose is to optimize the data size by not duplicating the same price data multiple times (e.g. for the same
     * price on consecutive days of the stay).
     * See PriceSet for more details.
     * </pre>
     *
     * <code>map&lt;uint32, .peakwork.api.accommodation.v1.offerdata.PriceSet&gt; price_sets = 8;</code>
     */

    public boolean containsPriceSets(
        int key) {
      
      return internalGetPriceSets().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPriceSetsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet> getPriceSets() {
      return getPriceSetsMap();
    }
    /**
     * <pre>
     * mandatory - Map of all PriceSets used in this message. The price sets are referenced by the offer_value via a
     * unique numeric key (uint32). This key is bound to a specific message and can be arbitrarily chosen. This means
     * a key for a price set in one message can be different for the same price set in a different message. It does not
     * serve as a permanent identifier of a price set.
     * A price set can be referenced multiple times from an offer_value in order to reuse the pricing structure in it. The
     * purpose is to optimize the data size by not duplicating the same price data multiple times (e.g. for the same
     * price on consecutive days of the stay).
     * See PriceSet for more details.
     * </pre>
     *
     * <code>map&lt;uint32, .peakwork.api.accommodation.v1.offerdata.PriceSet&gt; price_sets = 8;</code>
     */

    public java.util.Map<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet> getPriceSetsMap() {
      return internalGetPriceSets().getMap();
    }
    /**
     * <pre>
     * mandatory - Map of all PriceSets used in this message. The price sets are referenced by the offer_value via a
     * unique numeric key (uint32). This key is bound to a specific message and can be arbitrarily chosen. This means
     * a key for a price set in one message can be different for the same price set in a different message. It does not
     * serve as a permanent identifier of a price set.
     * A price set can be referenced multiple times from an offer_value in order to reuse the pricing structure in it. The
     * purpose is to optimize the data size by not duplicating the same price data multiple times (e.g. for the same
     * price on consecutive days of the stay).
     * See PriceSet for more details.
     * </pre>
     *
     * <code>map&lt;uint32, .peakwork.api.accommodation.v1.offerdata.PriceSet&gt; price_sets = 8;</code>
     */

    public com.peakwork.api.accommodation.v1.offerdata.PriceSet getPriceSetsOrDefault(
        int key,
        com.peakwork.api.accommodation.v1.offerdata.PriceSet defaultValue) {
      
      java.util.Map<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet> map =
          internalGetPriceSets().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * mandatory - Map of all PriceSets used in this message. The price sets are referenced by the offer_value via a
     * unique numeric key (uint32). This key is bound to a specific message and can be arbitrarily chosen. This means
     * a key for a price set in one message can be different for the same price set in a different message. It does not
     * serve as a permanent identifier of a price set.
     * A price set can be referenced multiple times from an offer_value in order to reuse the pricing structure in it. The
     * purpose is to optimize the data size by not duplicating the same price data multiple times (e.g. for the same
     * price on consecutive days of the stay).
     * See PriceSet for more details.
     * </pre>
     *
     * <code>map&lt;uint32, .peakwork.api.accommodation.v1.offerdata.PriceSet&gt; price_sets = 8;</code>
     */

    public com.peakwork.api.accommodation.v1.offerdata.PriceSet getPriceSetsOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet> map =
          internalGetPriceSets().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearPriceSets() {
      internalGetMutablePriceSets().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * mandatory - Map of all PriceSets used in this message. The price sets are referenced by the offer_value via a
     * unique numeric key (uint32). This key is bound to a specific message and can be arbitrarily chosen. This means
     * a key for a price set in one message can be different for the same price set in a different message. It does not
     * serve as a permanent identifier of a price set.
     * A price set can be referenced multiple times from an offer_value in order to reuse the pricing structure in it. The
     * purpose is to optimize the data size by not duplicating the same price data multiple times (e.g. for the same
     * price on consecutive days of the stay).
     * See PriceSet for more details.
     * </pre>
     *
     * <code>map&lt;uint32, .peakwork.api.accommodation.v1.offerdata.PriceSet&gt; price_sets = 8;</code>
     */

    public Builder removePriceSets(
        int key) {
      
      internalGetMutablePriceSets().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet>
    getMutablePriceSets() {
      return internalGetMutablePriceSets().getMutableMap();
    }
    /**
     * <pre>
     * mandatory - Map of all PriceSets used in this message. The price sets are referenced by the offer_value via a
     * unique numeric key (uint32). This key is bound to a specific message and can be arbitrarily chosen. This means
     * a key for a price set in one message can be different for the same price set in a different message. It does not
     * serve as a permanent identifier of a price set.
     * A price set can be referenced multiple times from an offer_value in order to reuse the pricing structure in it. The
     * purpose is to optimize the data size by not duplicating the same price data multiple times (e.g. for the same
     * price on consecutive days of the stay).
     * See PriceSet for more details.
     * </pre>
     *
     * <code>map&lt;uint32, .peakwork.api.accommodation.v1.offerdata.PriceSet&gt; price_sets = 8;</code>
     */
    public Builder putPriceSets(
        int key,
        com.peakwork.api.accommodation.v1.offerdata.PriceSet value) {
      
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutablePriceSets().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * mandatory - Map of all PriceSets used in this message. The price sets are referenced by the offer_value via a
     * unique numeric key (uint32). This key is bound to a specific message and can be arbitrarily chosen. This means
     * a key for a price set in one message can be different for the same price set in a different message. It does not
     * serve as a permanent identifier of a price set.
     * A price set can be referenced multiple times from an offer_value in order to reuse the pricing structure in it. The
     * purpose is to optimize the data size by not duplicating the same price data multiple times (e.g. for the same
     * price on consecutive days of the stay).
     * See PriceSet for more details.
     * </pre>
     *
     * <code>map&lt;uint32, .peakwork.api.accommodation.v1.offerdata.PriceSet&gt; price_sets = 8;</code>
     */

    public Builder putAllPriceSets(
        java.util.Map<java.lang.Integer, com.peakwork.api.accommodation.v1.offerdata.PriceSet> values) {
      internalGetMutablePriceSets().getMutableMap()
          .putAll(values);
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload)
  }

  // @@protoc_insertion_point(class_scope:peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload)
  private static final com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload();
  }

  public static com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SingleOfferDataDeliveryPayload>
      PARSER = new com.google.protobuf.AbstractParser<SingleOfferDataDeliveryPayload>() {
    @java.lang.Override
    public SingleOfferDataDeliveryPayload parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SingleOfferDataDeliveryPayload(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SingleOfferDataDeliveryPayload> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SingleOfferDataDeliveryPayload> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.peakwork.api.accommodation.v1.SingleOfferDataDeliveryPayload getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

