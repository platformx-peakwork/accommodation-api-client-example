// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basedata.proto

package com.peakwork.api.accommodation.v1.basedata;

public interface OccupancyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:peakwork.api.accommodation.v1.basedata.Occupancy)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * optional - default: 1 - Minimum number of persons allowed in total. Must be greater than or equal to 1.
   * </pre>
   *
   * <code>int32 min_pax = 1;</code>
   */
  int getMinPax();

  /**
   * <pre>
   * mandatory - Maximum number of persons allowed in total.
   * </pre>
   *
   * <code>int32 max_pax = 2;</code>
   */
  int getMaxPax();

  /**
   * <pre>
   * optional - default: 1 - Minimum number of adults allowed. Must be greater than or equal to 1.
   * </pre>
   *
   * <code>int32 min_adults = 3;</code>
   */
  int getMinAdults();

  /**
   * <pre>
   * optional - Maximum number of adults allowed.
   * </pre>
   *
   * <code>int32 max_adults = 4;</code>
   */
  int getMaxAdults();

  /**
   * <pre>
   * optional - default: 0 - Minimum number of children allowed.
   * </pre>
   *
   * <code>int32 min_children = 5;</code>
   */
  int getMinChildren();

  /**
   * <pre>
   * optional - default: 0 - Maximum number of children allowed.
   * </pre>
   *
   * <code>int32 max_children = 6;</code>
   */
  int getMaxChildren();

  /**
   * <pre>
   * optional - default: 2 - Minimum age in years, where a person is considered a child (inclusive). Persons younger
   * than this age are considered infants. Persons older than this age are considered either children or adults,
   * depending on max_child_age.
   * </pre>
   *
   * <code>int32 min_child_age = 7;</code>
   */
  int getMinChildAge();

  /**
   * <pre>
   * optional - default: 17 - Maximum age in years, where a person is considered a child (inclusive). Persons older than
   * this age are considered adults. Persons younger than this age are considered either children or infants, depending
   * on min_child_age.
   * </pre>
   *
   * <code>int32 max_child_age = 8;</code>
   */
  int getMaxChildAge();

  /**
   * <pre>
   * optional - Maximum number of infants allowed. If not given, no maximum restrictions towards infants apply.
   * </pre>
   *
   * <code>int32 max_infants = 9;</code>
   */
  int getMaxInfants();

  /**
   * <pre>
   * optional - default: false - Defines whether or not infants are counted towards the total pax restrictions (min_pax
   * and max_pax). If true, infants count towards the total pax count, i.e. the total pax count including infants
   * cannot exceed the max_pax restrictions and the min_pax restriction can be met by infants. If false, infants do not
   * count towards the total pax count, i.e. the total pax count including infants may exceed max_pax and infants do not
   * count towards min_pax.
   * </pre>
   *
   * <code>bool infants_apply_to_occupancy = 10;</code>
   */
  boolean getInfantsApplyToOccupancy();
}
