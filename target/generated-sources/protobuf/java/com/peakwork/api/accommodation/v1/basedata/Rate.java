// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basedata.proto

package com.peakwork.api.accommodation.v1.basedata;

/**
 * <pre>
 * Represents a rate (or more precisely: a rate type) of a supplier's accommodation portfolio. A rate has two purposes:
 * - Distinguishing multiple different prices for the same travel (i.e. accommodation, room, board, arrival date, LOS
 *   combination). There might be multiple offers for the same travel, e.g. a non refundable and a refundable price.
 *   This can be done by creating multiple offers with the same accommodation, room, board, arrival date, LOS
 *   combination but different rates.
 * - Transporting meta information about an offer, e.g. for booking purposes or for displaying to the customer.
 * A rate can be used for multiple offers. It has no direct connection to other base data entities. Therefore, a rate
 * can for example be used in offers of only a single accommodation or even for multiple different accommodations.
 * The supplier is free on how to distinguish rates from each other.
 * </pre>
 *
 * Protobuf type {@code peakwork.api.accommodation.v1.basedata.Rate}
 */
public  final class Rate extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:peakwork.api.accommodation.v1.basedata.Rate)
    RateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Rate.newBuilder() to construct.
  private Rate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Rate() {
    rateIdentifier_ = "";
    globalTypes_ = java.util.Collections.emptyList();
    targetCompanies_ = java.util.Collections.emptyList();
    targetCountry_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Rate(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            rateIdentifier_ = s;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              globalTypes_ = new java.util.ArrayList<com.peakwork.api.accommodation.v1.common.GlobalType>();
              mutable_bitField0_ |= 0x00000002;
            }
            globalTypes_.add(
                input.readMessage(com.peakwork.api.accommodation.v1.common.GlobalType.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              bookingPayload_ = com.google.protobuf.MapField.newMapField(
                  BookingPayloadDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000004;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            bookingPayload__ = input.readMessage(
                BookingPayloadDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            bookingPayload_.getMutableMap().put(
                bookingPayload__.getKey(), bookingPayload__.getValue());
            break;
          }
          case 32: {

            refundable_ = input.readBool();
            break;
          }
          case 40: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              targetCompanies_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000010;
            }
            targetCompanies_.add(rawValue);
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                targetCompanies_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              targetCompanies_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000020) != 0)) {
              targetCountry_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000020;
            }
            targetCountry_.add(s);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        globalTypes_ = java.util.Collections.unmodifiableList(globalTypes_);
      }
      if (((mutable_bitField0_ & 0x00000010) != 0)) {
        targetCompanies_ = java.util.Collections.unmodifiableList(targetCompanies_);
      }
      if (((mutable_bitField0_ & 0x00000020) != 0)) {
        targetCountry_ = targetCountry_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.peakwork.api.accommodation.v1.basedata.Basedata.internal_static_peakwork_api_accommodation_v1_basedata_Rate_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 3:
        return internalGetBookingPayload();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.peakwork.api.accommodation.v1.basedata.Basedata.internal_static_peakwork_api_accommodation_v1_basedata_Rate_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.peakwork.api.accommodation.v1.basedata.Rate.class, com.peakwork.api.accommodation.v1.basedata.Rate.Builder.class);
  }

  private int bitField0_;
  public static final int RATE_IDENTIFIER_FIELD_NUMBER = 1;
  private volatile java.lang.Object rateIdentifier_;
  /**
   * <pre>
   * mandatory - Identifies a rate within the scope of one supplier, i.e. it must be unique per supplier. A supplier
   * can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same rate
   * from the supplier's system has the same rate_identifier, whenever it is referenced in the Accommodation API. This
   * is especially important, when updating rate data. Data of a rate with the same identifier will be replaced, since
   * they are considered to reference the same rate entity.
   * </pre>
   *
   * <code>string rate_identifier = 1;</code>
   */
  public java.lang.String getRateIdentifier() {
    java.lang.Object ref = rateIdentifier_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      rateIdentifier_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * mandatory - Identifies a rate within the scope of one supplier, i.e. it must be unique per supplier. A supplier
   * can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same rate
   * from the supplier's system has the same rate_identifier, whenever it is referenced in the Accommodation API. This
   * is especially important, when updating rate data. Data of a rate with the same identifier will be replaced, since
   * they are considered to reference the same rate entity.
   * </pre>
   *
   * <code>string rate_identifier = 1;</code>
   */
  public com.google.protobuf.ByteString
      getRateIdentifierBytes() {
    java.lang.Object ref = rateIdentifier_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      rateIdentifier_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GLOBAL_TYPES_FIELD_NUMBER = 2;
  private java.util.List<com.peakwork.api.accommodation.v1.common.GlobalType> globalTypes_;
  /**
   * <pre>
   * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
   */
  public java.util.List<com.peakwork.api.accommodation.v1.common.GlobalType> getGlobalTypesList() {
    return globalTypes_;
  }
  /**
   * <pre>
   * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
   */
  public java.util.List<? extends com.peakwork.api.accommodation.v1.common.GlobalTypeOrBuilder> 
      getGlobalTypesOrBuilderList() {
    return globalTypes_;
  }
  /**
   * <pre>
   * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
   */
  public int getGlobalTypesCount() {
    return globalTypes_.size();
  }
  /**
   * <pre>
   * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
   */
  public com.peakwork.api.accommodation.v1.common.GlobalType getGlobalTypes(int index) {
    return globalTypes_.get(index);
  }
  /**
   * <pre>
   * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
   */
  public com.peakwork.api.accommodation.v1.common.GlobalTypeOrBuilder getGlobalTypesOrBuilder(
      int index) {
    return globalTypes_.get(index);
  }

  public static final int BOOKING_PAYLOAD_FIELD_NUMBER = 3;
  private static final class BookingPayloadDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.peakwork.api.accommodation.v1.basedata.Basedata.internal_static_peakwork_api_accommodation_v1_basedata_Rate_BookingPayloadEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> bookingPayload_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetBookingPayload() {
    if (bookingPayload_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          BookingPayloadDefaultEntryHolder.defaultEntry);
    }
    return bookingPayload_;
  }

  public int getBookingPayloadCount() {
    return internalGetBookingPayload().getMap().size();
  }
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 3;</code>
   */

  public boolean containsBookingPayload(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetBookingPayload().getMap().containsKey(key);
  }
  /**
   * Use {@link #getBookingPayloadMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getBookingPayload() {
    return getBookingPayloadMap();
  }
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 3;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getBookingPayloadMap() {
    return internalGetBookingPayload().getMap();
  }
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 3;</code>
   */

  public java.lang.String getBookingPayloadOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetBookingPayload().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 3;</code>
   */

  public java.lang.String getBookingPayloadOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetBookingPayload().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int REFUNDABLE_FIELD_NUMBER = 4;
  private boolean refundable_;
  /**
   * <pre>
   * mandatory - Denotes, whether the rate is refundable (true) or not (false).
   * </pre>
   *
   * <code>bool refundable = 4;</code>
   */
  public boolean getRefundable() {
    return refundable_;
  }

  public static final int TARGET_COMPANIES_FIELD_NUMBER = 5;
  private java.util.List<java.lang.Integer> targetCompanies_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, com.peakwork.api.accommodation.v1.basedata.TargetCompanyType> targetCompanies_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.peakwork.api.accommodation.v1.basedata.TargetCompanyType>() {
            public com.peakwork.api.accommodation.v1.basedata.TargetCompanyType convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              com.peakwork.api.accommodation.v1.basedata.TargetCompanyType result = com.peakwork.api.accommodation.v1.basedata.TargetCompanyType.valueOf(from);
              return result == null ? com.peakwork.api.accommodation.v1.basedata.TargetCompanyType.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
   * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
   */
  public java.util.List<com.peakwork.api.accommodation.v1.basedata.TargetCompanyType> getTargetCompaniesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.peakwork.api.accommodation.v1.basedata.TargetCompanyType>(targetCompanies_, targetCompanies_converter_);
  }
  /**
   * <pre>
   * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
   * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
   */
  public int getTargetCompaniesCount() {
    return targetCompanies_.size();
  }
  /**
   * <pre>
   * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
   * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
   */
  public com.peakwork.api.accommodation.v1.basedata.TargetCompanyType getTargetCompanies(int index) {
    return targetCompanies_converter_.convert(targetCompanies_.get(index));
  }
  /**
   * <pre>
   * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
   * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
   */
  public java.util.List<java.lang.Integer>
  getTargetCompaniesValueList() {
    return targetCompanies_;
  }
  /**
   * <pre>
   * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
   * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
   */
  public int getTargetCompaniesValue(int index) {
    return targetCompanies_.get(index);
  }
  private int targetCompaniesMemoizedSerializedSize;

  public static final int TARGET_COUNTRY_FIELD_NUMBER = 6;
  private com.google.protobuf.LazyStringList targetCountry_;
  /**
   * <pre>
   * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
   * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
   * given, no country restriction is applied.
   * </pre>
   *
   * <code>repeated string target_country = 6;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getTargetCountryList() {
    return targetCountry_;
  }
  /**
   * <pre>
   * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
   * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
   * given, no country restriction is applied.
   * </pre>
   *
   * <code>repeated string target_country = 6;</code>
   */
  public int getTargetCountryCount() {
    return targetCountry_.size();
  }
  /**
   * <pre>
   * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
   * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
   * given, no country restriction is applied.
   * </pre>
   *
   * <code>repeated string target_country = 6;</code>
   */
  public java.lang.String getTargetCountry(int index) {
    return targetCountry_.get(index);
  }
  /**
   * <pre>
   * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
   * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
   * given, no country restriction is applied.
   * </pre>
   *
   * <code>repeated string target_country = 6;</code>
   */
  public com.google.protobuf.ByteString
      getTargetCountryBytes(int index) {
    return targetCountry_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!getRateIdentifierBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rateIdentifier_);
    }
    for (int i = 0; i < globalTypes_.size(); i++) {
      output.writeMessage(2, globalTypes_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetBookingPayload(),
        BookingPayloadDefaultEntryHolder.defaultEntry,
        3);
    if (refundable_ != false) {
      output.writeBool(4, refundable_);
    }
    if (getTargetCompaniesList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(targetCompaniesMemoizedSerializedSize);
    }
    for (int i = 0; i < targetCompanies_.size(); i++) {
      output.writeEnumNoTag(targetCompanies_.get(i));
    }
    for (int i = 0; i < targetCountry_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, targetCountry_.getRaw(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getRateIdentifierBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rateIdentifier_);
    }
    for (int i = 0; i < globalTypes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, globalTypes_.get(i));
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetBookingPayload().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      bookingPayload__ = BookingPayloadDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, bookingPayload__);
    }
    if (refundable_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, refundable_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < targetCompanies_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(targetCompanies_.get(i));
      }
      size += dataSize;
      if (!getTargetCompaniesList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }targetCompaniesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < targetCountry_.size(); i++) {
        dataSize += computeStringSizeNoTag(targetCountry_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getTargetCountryList().size();
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.peakwork.api.accommodation.v1.basedata.Rate)) {
      return super.equals(obj);
    }
    com.peakwork.api.accommodation.v1.basedata.Rate other = (com.peakwork.api.accommodation.v1.basedata.Rate) obj;

    if (!getRateIdentifier()
        .equals(other.getRateIdentifier())) return false;
    if (!getGlobalTypesList()
        .equals(other.getGlobalTypesList())) return false;
    if (!internalGetBookingPayload().equals(
        other.internalGetBookingPayload())) return false;
    if (getRefundable()
        != other.getRefundable()) return false;
    if (!targetCompanies_.equals(other.targetCompanies_)) return false;
    if (!getTargetCountryList()
        .equals(other.getTargetCountryList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + RATE_IDENTIFIER_FIELD_NUMBER;
    hash = (53 * hash) + getRateIdentifier().hashCode();
    if (getGlobalTypesCount() > 0) {
      hash = (37 * hash) + GLOBAL_TYPES_FIELD_NUMBER;
      hash = (53 * hash) + getGlobalTypesList().hashCode();
    }
    if (!internalGetBookingPayload().getMap().isEmpty()) {
      hash = (37 * hash) + BOOKING_PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + internalGetBookingPayload().hashCode();
    }
    hash = (37 * hash) + REFUNDABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRefundable());
    if (getTargetCompaniesCount() > 0) {
      hash = (37 * hash) + TARGET_COMPANIES_FIELD_NUMBER;
      hash = (53 * hash) + targetCompanies_.hashCode();
    }
    if (getTargetCountryCount() > 0) {
      hash = (37 * hash) + TARGET_COUNTRY_FIELD_NUMBER;
      hash = (53 * hash) + getTargetCountryList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.peakwork.api.accommodation.v1.basedata.Rate parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Rate parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Rate parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Rate parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Rate parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Rate parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Rate parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Rate parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Rate parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Rate parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Rate parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Rate parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.peakwork.api.accommodation.v1.basedata.Rate prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents a rate (or more precisely: a rate type) of a supplier's accommodation portfolio. A rate has two purposes:
   * - Distinguishing multiple different prices for the same travel (i.e. accommodation, room, board, arrival date, LOS
   *   combination). There might be multiple offers for the same travel, e.g. a non refundable and a refundable price.
   *   This can be done by creating multiple offers with the same accommodation, room, board, arrival date, LOS
   *   combination but different rates.
   * - Transporting meta information about an offer, e.g. for booking purposes or for displaying to the customer.
   * A rate can be used for multiple offers. It has no direct connection to other base data entities. Therefore, a rate
   * can for example be used in offers of only a single accommodation or even for multiple different accommodations.
   * The supplier is free on how to distinguish rates from each other.
   * </pre>
   *
   * Protobuf type {@code peakwork.api.accommodation.v1.basedata.Rate}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:peakwork.api.accommodation.v1.basedata.Rate)
      com.peakwork.api.accommodation.v1.basedata.RateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.peakwork.api.accommodation.v1.basedata.Basedata.internal_static_peakwork_api_accommodation_v1_basedata_Rate_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetBookingPayload();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetMutableBookingPayload();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.peakwork.api.accommodation.v1.basedata.Basedata.internal_static_peakwork_api_accommodation_v1_basedata_Rate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.peakwork.api.accommodation.v1.basedata.Rate.class, com.peakwork.api.accommodation.v1.basedata.Rate.Builder.class);
    }

    // Construct using com.peakwork.api.accommodation.v1.basedata.Rate.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getGlobalTypesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      rateIdentifier_ = "";

      if (globalTypesBuilder_ == null) {
        globalTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        globalTypesBuilder_.clear();
      }
      internalGetMutableBookingPayload().clear();
      refundable_ = false;

      targetCompanies_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      targetCountry_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.peakwork.api.accommodation.v1.basedata.Basedata.internal_static_peakwork_api_accommodation_v1_basedata_Rate_descriptor;
    }

    @java.lang.Override
    public com.peakwork.api.accommodation.v1.basedata.Rate getDefaultInstanceForType() {
      return com.peakwork.api.accommodation.v1.basedata.Rate.getDefaultInstance();
    }

    @java.lang.Override
    public com.peakwork.api.accommodation.v1.basedata.Rate build() {
      com.peakwork.api.accommodation.v1.basedata.Rate result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.peakwork.api.accommodation.v1.basedata.Rate buildPartial() {
      com.peakwork.api.accommodation.v1.basedata.Rate result = new com.peakwork.api.accommodation.v1.basedata.Rate(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.rateIdentifier_ = rateIdentifier_;
      if (globalTypesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          globalTypes_ = java.util.Collections.unmodifiableList(globalTypes_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.globalTypes_ = globalTypes_;
      } else {
        result.globalTypes_ = globalTypesBuilder_.build();
      }
      result.bookingPayload_ = internalGetBookingPayload();
      result.bookingPayload_.makeImmutable();
      result.refundable_ = refundable_;
      if (((bitField0_ & 0x00000010) != 0)) {
        targetCompanies_ = java.util.Collections.unmodifiableList(targetCompanies_);
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.targetCompanies_ = targetCompanies_;
      if (((bitField0_ & 0x00000020) != 0)) {
        targetCountry_ = targetCountry_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.targetCountry_ = targetCountry_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.peakwork.api.accommodation.v1.basedata.Rate) {
        return mergeFrom((com.peakwork.api.accommodation.v1.basedata.Rate)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.peakwork.api.accommodation.v1.basedata.Rate other) {
      if (other == com.peakwork.api.accommodation.v1.basedata.Rate.getDefaultInstance()) return this;
      if (!other.getRateIdentifier().isEmpty()) {
        rateIdentifier_ = other.rateIdentifier_;
        onChanged();
      }
      if (globalTypesBuilder_ == null) {
        if (!other.globalTypes_.isEmpty()) {
          if (globalTypes_.isEmpty()) {
            globalTypes_ = other.globalTypes_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureGlobalTypesIsMutable();
            globalTypes_.addAll(other.globalTypes_);
          }
          onChanged();
        }
      } else {
        if (!other.globalTypes_.isEmpty()) {
          if (globalTypesBuilder_.isEmpty()) {
            globalTypesBuilder_.dispose();
            globalTypesBuilder_ = null;
            globalTypes_ = other.globalTypes_;
            bitField0_ = (bitField0_ & ~0x00000002);
            globalTypesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGlobalTypesFieldBuilder() : null;
          } else {
            globalTypesBuilder_.addAllMessages(other.globalTypes_);
          }
        }
      }
      internalGetMutableBookingPayload().mergeFrom(
          other.internalGetBookingPayload());
      if (other.getRefundable() != false) {
        setRefundable(other.getRefundable());
      }
      if (!other.targetCompanies_.isEmpty()) {
        if (targetCompanies_.isEmpty()) {
          targetCompanies_ = other.targetCompanies_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureTargetCompaniesIsMutable();
          targetCompanies_.addAll(other.targetCompanies_);
        }
        onChanged();
      }
      if (!other.targetCountry_.isEmpty()) {
        if (targetCountry_.isEmpty()) {
          targetCountry_ = other.targetCountry_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureTargetCountryIsMutable();
          targetCountry_.addAll(other.targetCountry_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.peakwork.api.accommodation.v1.basedata.Rate parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.peakwork.api.accommodation.v1.basedata.Rate) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object rateIdentifier_ = "";
    /**
     * <pre>
     * mandatory - Identifies a rate within the scope of one supplier, i.e. it must be unique per supplier. A supplier
     * can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same rate
     * from the supplier's system has the same rate_identifier, whenever it is referenced in the Accommodation API. This
     * is especially important, when updating rate data. Data of a rate with the same identifier will be replaced, since
     * they are considered to reference the same rate entity.
     * </pre>
     *
     * <code>string rate_identifier = 1;</code>
     */
    public java.lang.String getRateIdentifier() {
      java.lang.Object ref = rateIdentifier_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rateIdentifier_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * mandatory - Identifies a rate within the scope of one supplier, i.e. it must be unique per supplier. A supplier
     * can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same rate
     * from the supplier's system has the same rate_identifier, whenever it is referenced in the Accommodation API. This
     * is especially important, when updating rate data. Data of a rate with the same identifier will be replaced, since
     * they are considered to reference the same rate entity.
     * </pre>
     *
     * <code>string rate_identifier = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRateIdentifierBytes() {
      java.lang.Object ref = rateIdentifier_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rateIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * mandatory - Identifies a rate within the scope of one supplier, i.e. it must be unique per supplier. A supplier
     * can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same rate
     * from the supplier's system has the same rate_identifier, whenever it is referenced in the Accommodation API. This
     * is especially important, when updating rate data. Data of a rate with the same identifier will be replaced, since
     * they are considered to reference the same rate entity.
     * </pre>
     *
     * <code>string rate_identifier = 1;</code>
     */
    public Builder setRateIdentifier(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      rateIdentifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Identifies a rate within the scope of one supplier, i.e. it must be unique per supplier. A supplier
     * can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same rate
     * from the supplier's system has the same rate_identifier, whenever it is referenced in the Accommodation API. This
     * is especially important, when updating rate data. Data of a rate with the same identifier will be replaced, since
     * they are considered to reference the same rate entity.
     * </pre>
     *
     * <code>string rate_identifier = 1;</code>
     */
    public Builder clearRateIdentifier() {
      
      rateIdentifier_ = getDefaultInstance().getRateIdentifier();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Identifies a rate within the scope of one supplier, i.e. it must be unique per supplier. A supplier
     * can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same rate
     * from the supplier's system has the same rate_identifier, whenever it is referenced in the Accommodation API. This
     * is especially important, when updating rate data. Data of a rate with the same identifier will be replaced, since
     * they are considered to reference the same rate entity.
     * </pre>
     *
     * <code>string rate_identifier = 1;</code>
     */
    public Builder setRateIdentifierBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      rateIdentifier_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.peakwork.api.accommodation.v1.common.GlobalType> globalTypes_ =
      java.util.Collections.emptyList();
    private void ensureGlobalTypesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        globalTypes_ = new java.util.ArrayList<com.peakwork.api.accommodation.v1.common.GlobalType>(globalTypes_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.peakwork.api.accommodation.v1.common.GlobalType, com.peakwork.api.accommodation.v1.common.GlobalType.Builder, com.peakwork.api.accommodation.v1.common.GlobalTypeOrBuilder> globalTypesBuilder_;

    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public java.util.List<com.peakwork.api.accommodation.v1.common.GlobalType> getGlobalTypesList() {
      if (globalTypesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(globalTypes_);
      } else {
        return globalTypesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public int getGlobalTypesCount() {
      if (globalTypesBuilder_ == null) {
        return globalTypes_.size();
      } else {
        return globalTypesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public com.peakwork.api.accommodation.v1.common.GlobalType getGlobalTypes(int index) {
      if (globalTypesBuilder_ == null) {
        return globalTypes_.get(index);
      } else {
        return globalTypesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public Builder setGlobalTypes(
        int index, com.peakwork.api.accommodation.v1.common.GlobalType value) {
      if (globalTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGlobalTypesIsMutable();
        globalTypes_.set(index, value);
        onChanged();
      } else {
        globalTypesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public Builder setGlobalTypes(
        int index, com.peakwork.api.accommodation.v1.common.GlobalType.Builder builderForValue) {
      if (globalTypesBuilder_ == null) {
        ensureGlobalTypesIsMutable();
        globalTypes_.set(index, builderForValue.build());
        onChanged();
      } else {
        globalTypesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public Builder addGlobalTypes(com.peakwork.api.accommodation.v1.common.GlobalType value) {
      if (globalTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGlobalTypesIsMutable();
        globalTypes_.add(value);
        onChanged();
      } else {
        globalTypesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public Builder addGlobalTypes(
        int index, com.peakwork.api.accommodation.v1.common.GlobalType value) {
      if (globalTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGlobalTypesIsMutable();
        globalTypes_.add(index, value);
        onChanged();
      } else {
        globalTypesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public Builder addGlobalTypes(
        com.peakwork.api.accommodation.v1.common.GlobalType.Builder builderForValue) {
      if (globalTypesBuilder_ == null) {
        ensureGlobalTypesIsMutable();
        globalTypes_.add(builderForValue.build());
        onChanged();
      } else {
        globalTypesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public Builder addGlobalTypes(
        int index, com.peakwork.api.accommodation.v1.common.GlobalType.Builder builderForValue) {
      if (globalTypesBuilder_ == null) {
        ensureGlobalTypesIsMutable();
        globalTypes_.add(index, builderForValue.build());
        onChanged();
      } else {
        globalTypesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public Builder addAllGlobalTypes(
        java.lang.Iterable<? extends com.peakwork.api.accommodation.v1.common.GlobalType> values) {
      if (globalTypesBuilder_ == null) {
        ensureGlobalTypesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, globalTypes_);
        onChanged();
      } else {
        globalTypesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public Builder clearGlobalTypes() {
      if (globalTypesBuilder_ == null) {
        globalTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        globalTypesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public Builder removeGlobalTypes(int index) {
      if (globalTypesBuilder_ == null) {
        ensureGlobalTypesIsMutable();
        globalTypes_.remove(index);
        onChanged();
      } else {
        globalTypesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public com.peakwork.api.accommodation.v1.common.GlobalType.Builder getGlobalTypesBuilder(
        int index) {
      return getGlobalTypesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public com.peakwork.api.accommodation.v1.common.GlobalTypeOrBuilder getGlobalTypesOrBuilder(
        int index) {
      if (globalTypesBuilder_ == null) {
        return globalTypes_.get(index);  } else {
        return globalTypesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public java.util.List<? extends com.peakwork.api.accommodation.v1.common.GlobalTypeOrBuilder> 
         getGlobalTypesOrBuilderList() {
      if (globalTypesBuilder_ != null) {
        return globalTypesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(globalTypes_);
      }
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public com.peakwork.api.accommodation.v1.common.GlobalType.Builder addGlobalTypesBuilder() {
      return getGlobalTypesFieldBuilder().addBuilder(
          com.peakwork.api.accommodation.v1.common.GlobalType.getDefaultInstance());
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public com.peakwork.api.accommodation.v1.common.GlobalType.Builder addGlobalTypesBuilder(
        int index) {
      return getGlobalTypesFieldBuilder().addBuilder(
          index, com.peakwork.api.accommodation.v1.common.GlobalType.getDefaultInstance());
    }
    /**
     * <pre>
     * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
     */
    public java.util.List<com.peakwork.api.accommodation.v1.common.GlobalType.Builder> 
         getGlobalTypesBuilderList() {
      return getGlobalTypesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.peakwork.api.accommodation.v1.common.GlobalType, com.peakwork.api.accommodation.v1.common.GlobalType.Builder, com.peakwork.api.accommodation.v1.common.GlobalTypeOrBuilder> 
        getGlobalTypesFieldBuilder() {
      if (globalTypesBuilder_ == null) {
        globalTypesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.peakwork.api.accommodation.v1.common.GlobalType, com.peakwork.api.accommodation.v1.common.GlobalType.Builder, com.peakwork.api.accommodation.v1.common.GlobalTypeOrBuilder>(
                globalTypes_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        globalTypes_ = null;
      }
      return globalTypesBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> bookingPayload_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetBookingPayload() {
      if (bookingPayload_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BookingPayloadDefaultEntryHolder.defaultEntry);
      }
      return bookingPayload_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableBookingPayload() {
      onChanged();;
      if (bookingPayload_ == null) {
        bookingPayload_ = com.google.protobuf.MapField.newMapField(
            BookingPayloadDefaultEntryHolder.defaultEntry);
      }
      if (!bookingPayload_.isMutable()) {
        bookingPayload_ = bookingPayload_.copy();
      }
      return bookingPayload_;
    }

    public int getBookingPayloadCount() {
      return internalGetBookingPayload().getMap().size();
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 3;</code>
     */

    public boolean containsBookingPayload(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetBookingPayload().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBookingPayloadMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getBookingPayload() {
      return getBookingPayloadMap();
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getBookingPayloadMap() {
      return internalGetBookingPayload().getMap();
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 3;</code>
     */

    public java.lang.String getBookingPayloadOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetBookingPayload().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 3;</code>
     */

    public java.lang.String getBookingPayloadOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetBookingPayload().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearBookingPayload() {
      internalGetMutableBookingPayload().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 3;</code>
     */

    public Builder removeBookingPayload(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableBookingPayload().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableBookingPayload() {
      return internalGetMutableBookingPayload().getMutableMap();
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 3;</code>
     */
    public Builder putBookingPayload(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableBookingPayload().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 3;</code>
     */

    public Builder putAllBookingPayload(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableBookingPayload().getMutableMap()
          .putAll(values);
      return this;
    }

    private boolean refundable_ ;
    /**
     * <pre>
     * mandatory - Denotes, whether the rate is refundable (true) or not (false).
     * </pre>
     *
     * <code>bool refundable = 4;</code>
     */
    public boolean getRefundable() {
      return refundable_;
    }
    /**
     * <pre>
     * mandatory - Denotes, whether the rate is refundable (true) or not (false).
     * </pre>
     *
     * <code>bool refundable = 4;</code>
     */
    public Builder setRefundable(boolean value) {
      
      refundable_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Denotes, whether the rate is refundable (true) or not (false).
     * </pre>
     *
     * <code>bool refundable = 4;</code>
     */
    public Builder clearRefundable() {
      
      refundable_ = false;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> targetCompanies_ =
      java.util.Collections.emptyList();
    private void ensureTargetCompaniesIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        targetCompanies_ = new java.util.ArrayList<java.lang.Integer>(targetCompanies_);
        bitField0_ |= 0x00000010;
      }
    }
    /**
     * <pre>
     * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
     * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
     */
    public java.util.List<com.peakwork.api.accommodation.v1.basedata.TargetCompanyType> getTargetCompaniesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.peakwork.api.accommodation.v1.basedata.TargetCompanyType>(targetCompanies_, targetCompanies_converter_);
    }
    /**
     * <pre>
     * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
     * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
     */
    public int getTargetCompaniesCount() {
      return targetCompanies_.size();
    }
    /**
     * <pre>
     * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
     * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
     */
    public com.peakwork.api.accommodation.v1.basedata.TargetCompanyType getTargetCompanies(int index) {
      return targetCompanies_converter_.convert(targetCompanies_.get(index));
    }
    /**
     * <pre>
     * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
     * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
     */
    public Builder setTargetCompanies(
        int index, com.peakwork.api.accommodation.v1.basedata.TargetCompanyType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTargetCompaniesIsMutable();
      targetCompanies_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
     * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
     */
    public Builder addTargetCompanies(com.peakwork.api.accommodation.v1.basedata.TargetCompanyType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTargetCompaniesIsMutable();
      targetCompanies_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
     * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
     */
    public Builder addAllTargetCompanies(
        java.lang.Iterable<? extends com.peakwork.api.accommodation.v1.basedata.TargetCompanyType> values) {
      ensureTargetCompaniesIsMutable();
      for (com.peakwork.api.accommodation.v1.basedata.TargetCompanyType value : values) {
        targetCompanies_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
     * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
     */
    public Builder clearTargetCompanies() {
      targetCompanies_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
     * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
     */
    public java.util.List<java.lang.Integer>
    getTargetCompaniesValueList() {
      return java.util.Collections.unmodifiableList(targetCompanies_);
    }
    /**
     * <pre>
     * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
     * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
     */
    public int getTargetCompaniesValue(int index) {
      return targetCompanies_.get(index);
    }
    /**
     * <pre>
     * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
     * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
     */
    public Builder setTargetCompaniesValue(
        int index, int value) {
      ensureTargetCompaniesIsMutable();
      targetCompanies_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
     * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
     */
    public Builder addTargetCompaniesValue(int value) {
      ensureTargetCompaniesIsMutable();
      targetCompanies_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
     * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
     * </pre>
     *
     * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
     */
    public Builder addAllTargetCompaniesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureTargetCompaniesIsMutable();
      for (int value : values) {
        targetCompanies_.add(value);
      }
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList targetCountry_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureTargetCountryIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        targetCountry_ = new com.google.protobuf.LazyStringArrayList(targetCountry_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <pre>
     * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
     * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
     * given, no country restriction is applied.
     * </pre>
     *
     * <code>repeated string target_country = 6;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getTargetCountryList() {
      return targetCountry_.getUnmodifiableView();
    }
    /**
     * <pre>
     * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
     * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
     * given, no country restriction is applied.
     * </pre>
     *
     * <code>repeated string target_country = 6;</code>
     */
    public int getTargetCountryCount() {
      return targetCountry_.size();
    }
    /**
     * <pre>
     * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
     * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
     * given, no country restriction is applied.
     * </pre>
     *
     * <code>repeated string target_country = 6;</code>
     */
    public java.lang.String getTargetCountry(int index) {
      return targetCountry_.get(index);
    }
    /**
     * <pre>
     * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
     * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
     * given, no country restriction is applied.
     * </pre>
     *
     * <code>repeated string target_country = 6;</code>
     */
    public com.google.protobuf.ByteString
        getTargetCountryBytes(int index) {
      return targetCountry_.getByteString(index);
    }
    /**
     * <pre>
     * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
     * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
     * given, no country restriction is applied.
     * </pre>
     *
     * <code>repeated string target_country = 6;</code>
     */
    public Builder setTargetCountry(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTargetCountryIsMutable();
      targetCountry_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
     * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
     * given, no country restriction is applied.
     * </pre>
     *
     * <code>repeated string target_country = 6;</code>
     */
    public Builder addTargetCountry(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTargetCountryIsMutable();
      targetCountry_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
     * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
     * given, no country restriction is applied.
     * </pre>
     *
     * <code>repeated string target_country = 6;</code>
     */
    public Builder addAllTargetCountry(
        java.lang.Iterable<java.lang.String> values) {
      ensureTargetCountryIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, targetCountry_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
     * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
     * given, no country restriction is applied.
     * </pre>
     *
     * <code>repeated string target_country = 6;</code>
     */
    public Builder clearTargetCountry() {
      targetCountry_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
     * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
     * given, no country restriction is applied.
     * </pre>
     *
     * <code>repeated string target_country = 6;</code>
     */
    public Builder addTargetCountryBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureTargetCountryIsMutable();
      targetCountry_.add(value);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:peakwork.api.accommodation.v1.basedata.Rate)
  }

  // @@protoc_insertion_point(class_scope:peakwork.api.accommodation.v1.basedata.Rate)
  private static final com.peakwork.api.accommodation.v1.basedata.Rate DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.peakwork.api.accommodation.v1.basedata.Rate();
  }

  public static com.peakwork.api.accommodation.v1.basedata.Rate getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Rate>
      PARSER = new com.google.protobuf.AbstractParser<Rate>() {
    @java.lang.Override
    public Rate parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Rate(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Rate> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Rate> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.peakwork.api.accommodation.v1.basedata.Rate getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

