// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basedata.proto

package com.peakwork.api.accommodation.v1.basedata;

/**
 * <pre>
 * Represents an accommodation, e.g. a hotel, within a supplier's accommodation portfolio. This entity contains meta
 * information about the accommodation, e.g. to give out the the end customer.
 * </pre>
 *
 * Protobuf type {@code peakwork.api.accommodation.v1.basedata.Accommodation}
 */
public  final class Accommodation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:peakwork.api.accommodation.v1.basedata.Accommodation)
    AccommodationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Accommodation.newBuilder() to construct.
  private Accommodation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Accommodation() {
    supplierAccommodationId_ = "";
    arrivalAirports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Accommodation(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            supplierAccommodationId_ = s;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              name_ = com.google.protobuf.MapField.newMapField(
                  NameDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            name__ = input.readMessage(
                NameDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            name_.getMutableMap().put(
                name__.getKey(), name__.getValue());
            break;
          }
          case 26: {
            com.peakwork.api.accommodation.v1.basedata.Address.Builder subBuilder = null;
            if (address_ != null) {
              subBuilder = address_.toBuilder();
            }
            address_ = input.readMessage(com.peakwork.api.accommodation.v1.basedata.Address.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(address_);
              address_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.peakwork.api.accommodation.v1.basedata.Coordinates.Builder subBuilder = null;
            if (coordinates_ != null) {
              subBuilder = coordinates_.toBuilder();
            }
            coordinates_ = input.readMessage(com.peakwork.api.accommodation.v1.basedata.Coordinates.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(coordinates_);
              coordinates_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              arrivalAirports_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000010;
            }
            arrivalAirports_.add(s);
            break;
          }
          case 49: {

            starRating_ = input.readDouble();
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000040) != 0)) {
              bookingPayload_ = com.google.protobuf.MapField.newMapField(
                  BookingPayloadDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000040;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            bookingPayload__ = input.readMessage(
                BookingPayloadDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            bookingPayload_.getMutableMap().put(
                bookingPayload__.getKey(), bookingPayload__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000010) != 0)) {
        arrivalAirports_ = arrivalAirports_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.peakwork.api.accommodation.v1.basedata.Basedata.internal_static_peakwork_api_accommodation_v1_basedata_Accommodation_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 2:
        return internalGetName();
      case 7:
        return internalGetBookingPayload();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.peakwork.api.accommodation.v1.basedata.Basedata.internal_static_peakwork_api_accommodation_v1_basedata_Accommodation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.peakwork.api.accommodation.v1.basedata.Accommodation.class, com.peakwork.api.accommodation.v1.basedata.Accommodation.Builder.class);
  }

  private int bitField0_;
  public static final int SUPPLIER_ACCOMMODATION_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object supplierAccommodationId_;
  /**
   * <pre>
   * mandatory - Identifies an accommodation within the scope of one supplier, i.e. it must be unique per supplier. A
   * supplier can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same
   * accommodation from the supplier's system has the same supplier_accommodation_id, whenever it is referenced in the
   * Accommodation API. This is especially important, when updating accommodation data. Data of an accommodation with
   * the same identifier will be replaced, since they are considered to reference the same accommodation entity.
   * </pre>
   *
   * <code>string supplier_accommodation_id = 1;</code>
   */
  public java.lang.String getSupplierAccommodationId() {
    java.lang.Object ref = supplierAccommodationId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      supplierAccommodationId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * mandatory - Identifies an accommodation within the scope of one supplier, i.e. it must be unique per supplier. A
   * supplier can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same
   * accommodation from the supplier's system has the same supplier_accommodation_id, whenever it is referenced in the
   * Accommodation API. This is especially important, when updating accommodation data. Data of an accommodation with
   * the same identifier will be replaced, since they are considered to reference the same accommodation entity.
   * </pre>
   *
   * <code>string supplier_accommodation_id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getSupplierAccommodationIdBytes() {
    java.lang.Object ref = supplierAccommodationId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      supplierAccommodationId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private static final class NameDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.peakwork.api.accommodation.v1.basedata.Basedata.internal_static_peakwork_api_accommodation_v1_basedata_Accommodation_NameEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> name_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetName() {
    if (name_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          NameDefaultEntryHolder.defaultEntry);
    }
    return name_;
  }

  public int getNameCount() {
    return internalGetName().getMap().size();
  }
  /**
   * <pre>
   * mandatory - The names of the accommodation in multiple languages as a map. At least one name must be given.
   * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
   * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
   * - value (string): the name of the accommodation in the corresponding language
   * </pre>
   *
   * <code>map&lt;string, string&gt; name = 2;</code>
   */

  public boolean containsName(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetName().getMap().containsKey(key);
  }
  /**
   * Use {@link #getNameMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getName() {
    return getNameMap();
  }
  /**
   * <pre>
   * mandatory - The names of the accommodation in multiple languages as a map. At least one name must be given.
   * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
   * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
   * - value (string): the name of the accommodation in the corresponding language
   * </pre>
   *
   * <code>map&lt;string, string&gt; name = 2;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getNameMap() {
    return internalGetName().getMap();
  }
  /**
   * <pre>
   * mandatory - The names of the accommodation in multiple languages as a map. At least one name must be given.
   * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
   * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
   * - value (string): the name of the accommodation in the corresponding language
   * </pre>
   *
   * <code>map&lt;string, string&gt; name = 2;</code>
   */

  public java.lang.String getNameOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetName().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * mandatory - The names of the accommodation in multiple languages as a map. At least one name must be given.
   * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
   * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
   * - value (string): the name of the accommodation in the corresponding language
   * </pre>
   *
   * <code>map&lt;string, string&gt; name = 2;</code>
   */

  public java.lang.String getNameOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetName().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int ADDRESS_FIELD_NUMBER = 3;
  private com.peakwork.api.accommodation.v1.basedata.Address address_;
  /**
   * <pre>
   * mandatory - Address of the accommodation
   * </pre>
   *
   * <code>.peakwork.api.accommodation.v1.basedata.Address address = 3;</code>
   */
  public boolean hasAddress() {
    return address_ != null;
  }
  /**
   * <pre>
   * mandatory - Address of the accommodation
   * </pre>
   *
   * <code>.peakwork.api.accommodation.v1.basedata.Address address = 3;</code>
   */
  public com.peakwork.api.accommodation.v1.basedata.Address getAddress() {
    return address_ == null ? com.peakwork.api.accommodation.v1.basedata.Address.getDefaultInstance() : address_;
  }
  /**
   * <pre>
   * mandatory - Address of the accommodation
   * </pre>
   *
   * <code>.peakwork.api.accommodation.v1.basedata.Address address = 3;</code>
   */
  public com.peakwork.api.accommodation.v1.basedata.AddressOrBuilder getAddressOrBuilder() {
    return getAddress();
  }

  public static final int COORDINATES_FIELD_NUMBER = 4;
  private com.peakwork.api.accommodation.v1.basedata.Coordinates coordinates_;
  /**
   * <pre>
   * optional - Geographical coordinates of the accommodation
   * </pre>
   *
   * <code>.peakwork.api.accommodation.v1.basedata.Coordinates coordinates = 4;</code>
   */
  public boolean hasCoordinates() {
    return coordinates_ != null;
  }
  /**
   * <pre>
   * optional - Geographical coordinates of the accommodation
   * </pre>
   *
   * <code>.peakwork.api.accommodation.v1.basedata.Coordinates coordinates = 4;</code>
   */
  public com.peakwork.api.accommodation.v1.basedata.Coordinates getCoordinates() {
    return coordinates_ == null ? com.peakwork.api.accommodation.v1.basedata.Coordinates.getDefaultInstance() : coordinates_;
  }
  /**
   * <pre>
   * optional - Geographical coordinates of the accommodation
   * </pre>
   *
   * <code>.peakwork.api.accommodation.v1.basedata.Coordinates coordinates = 4;</code>
   */
  public com.peakwork.api.accommodation.v1.basedata.CoordinatesOrBuilder getCoordinatesOrBuilder() {
    return getCoordinates();
  }

  public static final int ARRIVAL_AIRPORTS_FIELD_NUMBER = 5;
  private com.google.protobuf.LazyStringList arrivalAirports_;
  /**
   * <pre>
   * optional - List of airports, that can be used for arrival at the accommodation. Each entry denotes an airport in
   * IATA code format.
   * </pre>
   *
   * <code>repeated string arrival_airports = 5;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getArrivalAirportsList() {
    return arrivalAirports_;
  }
  /**
   * <pre>
   * optional - List of airports, that can be used for arrival at the accommodation. Each entry denotes an airport in
   * IATA code format.
   * </pre>
   *
   * <code>repeated string arrival_airports = 5;</code>
   */
  public int getArrivalAirportsCount() {
    return arrivalAirports_.size();
  }
  /**
   * <pre>
   * optional - List of airports, that can be used for arrival at the accommodation. Each entry denotes an airport in
   * IATA code format.
   * </pre>
   *
   * <code>repeated string arrival_airports = 5;</code>
   */
  public java.lang.String getArrivalAirports(int index) {
    return arrivalAirports_.get(index);
  }
  /**
   * <pre>
   * optional - List of airports, that can be used for arrival at the accommodation. Each entry denotes an airport in
   * IATA code format.
   * </pre>
   *
   * <code>repeated string arrival_airports = 5;</code>
   */
  public com.google.protobuf.ByteString
      getArrivalAirportsBytes(int index) {
    return arrivalAirports_.getByteString(index);
  }

  public static final int STAR_RATING_FIELD_NUMBER = 6;
  private double starRating_;
  /**
   * <pre>
   * mandatory - Accommodation rating in form of stars. Possible values from 0-7 in steps of 0.5:
   * [ 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6,5, 7 ]
   * </pre>
   *
   * <code>double star_rating = 6;</code>
   */
  public double getStarRating() {
    return starRating_;
  }

  public static final int BOOKING_PAYLOAD_FIELD_NUMBER = 7;
  private static final class BookingPayloadDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.peakwork.api.accommodation.v1.basedata.Basedata.internal_static_peakwork_api_accommodation_v1_basedata_Accommodation_BookingPayloadEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> bookingPayload_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetBookingPayload() {
    if (bookingPayload_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          BookingPayloadDefaultEntryHolder.defaultEntry);
    }
    return bookingPayload_;
  }

  public int getBookingPayloadCount() {
    return internalGetBookingPayload().getMap().size();
  }
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 7;</code>
   */

  public boolean containsBookingPayload(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetBookingPayload().getMap().containsKey(key);
  }
  /**
   * Use {@link #getBookingPayloadMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getBookingPayload() {
    return getBookingPayloadMap();
  }
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 7;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getBookingPayloadMap() {
    return internalGetBookingPayload().getMap();
  }
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 7;</code>
   */

  public java.lang.String getBookingPayloadOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetBookingPayload().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 7;</code>
   */

  public java.lang.String getBookingPayloadOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetBookingPayload().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getSupplierAccommodationIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, supplierAccommodationId_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetName(),
        NameDefaultEntryHolder.defaultEntry,
        2);
    if (address_ != null) {
      output.writeMessage(3, getAddress());
    }
    if (coordinates_ != null) {
      output.writeMessage(4, getCoordinates());
    }
    for (int i = 0; i < arrivalAirports_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, arrivalAirports_.getRaw(i));
    }
    if (starRating_ != 0D) {
      output.writeDouble(6, starRating_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetBookingPayload(),
        BookingPayloadDefaultEntryHolder.defaultEntry,
        7);
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getSupplierAccommodationIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, supplierAccommodationId_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetName().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      name__ = NameDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, name__);
    }
    if (address_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getAddress());
    }
    if (coordinates_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getCoordinates());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < arrivalAirports_.size(); i++) {
        dataSize += computeStringSizeNoTag(arrivalAirports_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getArrivalAirportsList().size();
    }
    if (starRating_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, starRating_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetBookingPayload().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      bookingPayload__ = BookingPayloadDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, bookingPayload__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.peakwork.api.accommodation.v1.basedata.Accommodation)) {
      return super.equals(obj);
    }
    com.peakwork.api.accommodation.v1.basedata.Accommodation other = (com.peakwork.api.accommodation.v1.basedata.Accommodation) obj;

    if (!getSupplierAccommodationId()
        .equals(other.getSupplierAccommodationId())) return false;
    if (!internalGetName().equals(
        other.internalGetName())) return false;
    if (hasAddress() != other.hasAddress()) return false;
    if (hasAddress()) {
      if (!getAddress()
          .equals(other.getAddress())) return false;
    }
    if (hasCoordinates() != other.hasCoordinates()) return false;
    if (hasCoordinates()) {
      if (!getCoordinates()
          .equals(other.getCoordinates())) return false;
    }
    if (!getArrivalAirportsList()
        .equals(other.getArrivalAirportsList())) return false;
    if (java.lang.Double.doubleToLongBits(getStarRating())
        != java.lang.Double.doubleToLongBits(
            other.getStarRating())) return false;
    if (!internalGetBookingPayload().equals(
        other.internalGetBookingPayload())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SUPPLIER_ACCOMMODATION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSupplierAccommodationId().hashCode();
    if (!internalGetName().getMap().isEmpty()) {
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + internalGetName().hashCode();
    }
    if (hasAddress()) {
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
    }
    if (hasCoordinates()) {
      hash = (37 * hash) + COORDINATES_FIELD_NUMBER;
      hash = (53 * hash) + getCoordinates().hashCode();
    }
    if (getArrivalAirportsCount() > 0) {
      hash = (37 * hash) + ARRIVAL_AIRPORTS_FIELD_NUMBER;
      hash = (53 * hash) + getArrivalAirportsList().hashCode();
    }
    hash = (37 * hash) + STAR_RATING_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getStarRating()));
    if (!internalGetBookingPayload().getMap().isEmpty()) {
      hash = (37 * hash) + BOOKING_PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + internalGetBookingPayload().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.peakwork.api.accommodation.v1.basedata.Accommodation parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Accommodation parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Accommodation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Accommodation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Accommodation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Accommodation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Accommodation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Accommodation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Accommodation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Accommodation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Accommodation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.peakwork.api.accommodation.v1.basedata.Accommodation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.peakwork.api.accommodation.v1.basedata.Accommodation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents an accommodation, e.g. a hotel, within a supplier's accommodation portfolio. This entity contains meta
   * information about the accommodation, e.g. to give out the the end customer.
   * </pre>
   *
   * Protobuf type {@code peakwork.api.accommodation.v1.basedata.Accommodation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:peakwork.api.accommodation.v1.basedata.Accommodation)
      com.peakwork.api.accommodation.v1.basedata.AccommodationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.peakwork.api.accommodation.v1.basedata.Basedata.internal_static_peakwork_api_accommodation_v1_basedata_Accommodation_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetName();
        case 7:
          return internalGetBookingPayload();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableName();
        case 7:
          return internalGetMutableBookingPayload();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.peakwork.api.accommodation.v1.basedata.Basedata.internal_static_peakwork_api_accommodation_v1_basedata_Accommodation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.peakwork.api.accommodation.v1.basedata.Accommodation.class, com.peakwork.api.accommodation.v1.basedata.Accommodation.Builder.class);
    }

    // Construct using com.peakwork.api.accommodation.v1.basedata.Accommodation.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      supplierAccommodationId_ = "";

      internalGetMutableName().clear();
      if (addressBuilder_ == null) {
        address_ = null;
      } else {
        address_ = null;
        addressBuilder_ = null;
      }
      if (coordinatesBuilder_ == null) {
        coordinates_ = null;
      } else {
        coordinates_ = null;
        coordinatesBuilder_ = null;
      }
      arrivalAirports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      starRating_ = 0D;

      internalGetMutableBookingPayload().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.peakwork.api.accommodation.v1.basedata.Basedata.internal_static_peakwork_api_accommodation_v1_basedata_Accommodation_descriptor;
    }

    @java.lang.Override
    public com.peakwork.api.accommodation.v1.basedata.Accommodation getDefaultInstanceForType() {
      return com.peakwork.api.accommodation.v1.basedata.Accommodation.getDefaultInstance();
    }

    @java.lang.Override
    public com.peakwork.api.accommodation.v1.basedata.Accommodation build() {
      com.peakwork.api.accommodation.v1.basedata.Accommodation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.peakwork.api.accommodation.v1.basedata.Accommodation buildPartial() {
      com.peakwork.api.accommodation.v1.basedata.Accommodation result = new com.peakwork.api.accommodation.v1.basedata.Accommodation(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.supplierAccommodationId_ = supplierAccommodationId_;
      result.name_ = internalGetName();
      result.name_.makeImmutable();
      if (addressBuilder_ == null) {
        result.address_ = address_;
      } else {
        result.address_ = addressBuilder_.build();
      }
      if (coordinatesBuilder_ == null) {
        result.coordinates_ = coordinates_;
      } else {
        result.coordinates_ = coordinatesBuilder_.build();
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        arrivalAirports_ = arrivalAirports_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.arrivalAirports_ = arrivalAirports_;
      result.starRating_ = starRating_;
      result.bookingPayload_ = internalGetBookingPayload();
      result.bookingPayload_.makeImmutable();
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.peakwork.api.accommodation.v1.basedata.Accommodation) {
        return mergeFrom((com.peakwork.api.accommodation.v1.basedata.Accommodation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.peakwork.api.accommodation.v1.basedata.Accommodation other) {
      if (other == com.peakwork.api.accommodation.v1.basedata.Accommodation.getDefaultInstance()) return this;
      if (!other.getSupplierAccommodationId().isEmpty()) {
        supplierAccommodationId_ = other.supplierAccommodationId_;
        onChanged();
      }
      internalGetMutableName().mergeFrom(
          other.internalGetName());
      if (other.hasAddress()) {
        mergeAddress(other.getAddress());
      }
      if (other.hasCoordinates()) {
        mergeCoordinates(other.getCoordinates());
      }
      if (!other.arrivalAirports_.isEmpty()) {
        if (arrivalAirports_.isEmpty()) {
          arrivalAirports_ = other.arrivalAirports_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureArrivalAirportsIsMutable();
          arrivalAirports_.addAll(other.arrivalAirports_);
        }
        onChanged();
      }
      if (other.getStarRating() != 0D) {
        setStarRating(other.getStarRating());
      }
      internalGetMutableBookingPayload().mergeFrom(
          other.internalGetBookingPayload());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.peakwork.api.accommodation.v1.basedata.Accommodation parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.peakwork.api.accommodation.v1.basedata.Accommodation) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object supplierAccommodationId_ = "";
    /**
     * <pre>
     * mandatory - Identifies an accommodation within the scope of one supplier, i.e. it must be unique per supplier. A
     * supplier can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same
     * accommodation from the supplier's system has the same supplier_accommodation_id, whenever it is referenced in the
     * Accommodation API. This is especially important, when updating accommodation data. Data of an accommodation with
     * the same identifier will be replaced, since they are considered to reference the same accommodation entity.
     * </pre>
     *
     * <code>string supplier_accommodation_id = 1;</code>
     */
    public java.lang.String getSupplierAccommodationId() {
      java.lang.Object ref = supplierAccommodationId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        supplierAccommodationId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * mandatory - Identifies an accommodation within the scope of one supplier, i.e. it must be unique per supplier. A
     * supplier can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same
     * accommodation from the supplier's system has the same supplier_accommodation_id, whenever it is referenced in the
     * Accommodation API. This is especially important, when updating accommodation data. Data of an accommodation with
     * the same identifier will be replaced, since they are considered to reference the same accommodation entity.
     * </pre>
     *
     * <code>string supplier_accommodation_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSupplierAccommodationIdBytes() {
      java.lang.Object ref = supplierAccommodationId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        supplierAccommodationId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * mandatory - Identifies an accommodation within the scope of one supplier, i.e. it must be unique per supplier. A
     * supplier can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same
     * accommodation from the supplier's system has the same supplier_accommodation_id, whenever it is referenced in the
     * Accommodation API. This is especially important, when updating accommodation data. Data of an accommodation with
     * the same identifier will be replaced, since they are considered to reference the same accommodation entity.
     * </pre>
     *
     * <code>string supplier_accommodation_id = 1;</code>
     */
    public Builder setSupplierAccommodationId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      supplierAccommodationId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Identifies an accommodation within the scope of one supplier, i.e. it must be unique per supplier. A
     * supplier can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same
     * accommodation from the supplier's system has the same supplier_accommodation_id, whenever it is referenced in the
     * Accommodation API. This is especially important, when updating accommodation data. Data of an accommodation with
     * the same identifier will be replaced, since they are considered to reference the same accommodation entity.
     * </pre>
     *
     * <code>string supplier_accommodation_id = 1;</code>
     */
    public Builder clearSupplierAccommodationId() {
      
      supplierAccommodationId_ = getDefaultInstance().getSupplierAccommodationId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Identifies an accommodation within the scope of one supplier, i.e. it must be unique per supplier. A
     * supplier can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same
     * accommodation from the supplier's system has the same supplier_accommodation_id, whenever it is referenced in the
     * Accommodation API. This is especially important, when updating accommodation data. Data of an accommodation with
     * the same identifier will be replaced, since they are considered to reference the same accommodation entity.
     * </pre>
     *
     * <code>string supplier_accommodation_id = 1;</code>
     */
    public Builder setSupplierAccommodationIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      supplierAccommodationId_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> name_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetName() {
      if (name_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            NameDefaultEntryHolder.defaultEntry);
      }
      return name_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableName() {
      onChanged();;
      if (name_ == null) {
        name_ = com.google.protobuf.MapField.newMapField(
            NameDefaultEntryHolder.defaultEntry);
      }
      if (!name_.isMutable()) {
        name_ = name_.copy();
      }
      return name_;
    }

    public int getNameCount() {
      return internalGetName().getMap().size();
    }
    /**
     * <pre>
     * mandatory - The names of the accommodation in multiple languages as a map. At least one name must be given.
     * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
     * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
     * - value (string): the name of the accommodation in the corresponding language
     * </pre>
     *
     * <code>map&lt;string, string&gt; name = 2;</code>
     */

    public boolean containsName(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetName().getMap().containsKey(key);
    }
    /**
     * Use {@link #getNameMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getName() {
      return getNameMap();
    }
    /**
     * <pre>
     * mandatory - The names of the accommodation in multiple languages as a map. At least one name must be given.
     * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
     * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
     * - value (string): the name of the accommodation in the corresponding language
     * </pre>
     *
     * <code>map&lt;string, string&gt; name = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getNameMap() {
      return internalGetName().getMap();
    }
    /**
     * <pre>
     * mandatory - The names of the accommodation in multiple languages as a map. At least one name must be given.
     * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
     * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
     * - value (string): the name of the accommodation in the corresponding language
     * </pre>
     *
     * <code>map&lt;string, string&gt; name = 2;</code>
     */

    public java.lang.String getNameOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetName().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * mandatory - The names of the accommodation in multiple languages as a map. At least one name must be given.
     * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
     * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
     * - value (string): the name of the accommodation in the corresponding language
     * </pre>
     *
     * <code>map&lt;string, string&gt; name = 2;</code>
     */

    public java.lang.String getNameOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetName().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearName() {
      internalGetMutableName().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * mandatory - The names of the accommodation in multiple languages as a map. At least one name must be given.
     * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
     * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
     * - value (string): the name of the accommodation in the corresponding language
     * </pre>
     *
     * <code>map&lt;string, string&gt; name = 2;</code>
     */

    public Builder removeName(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableName().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableName() {
      return internalGetMutableName().getMutableMap();
    }
    /**
     * <pre>
     * mandatory - The names of the accommodation in multiple languages as a map. At least one name must be given.
     * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
     * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
     * - value (string): the name of the accommodation in the corresponding language
     * </pre>
     *
     * <code>map&lt;string, string&gt; name = 2;</code>
     */
    public Builder putName(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableName().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * mandatory - The names of the accommodation in multiple languages as a map. At least one name must be given.
     * - key (string): Language code in the format language_country with language being a ISO 639-1 language code and country
     * being a ISO 3166-1 Alpha-2 country code (e.g. "en_GB", "en_US", "de_DE" or "de_CH")
     * - value (string): the name of the accommodation in the corresponding language
     * </pre>
     *
     * <code>map&lt;string, string&gt; name = 2;</code>
     */

    public Builder putAllName(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableName().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.peakwork.api.accommodation.v1.basedata.Address address_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.peakwork.api.accommodation.v1.basedata.Address, com.peakwork.api.accommodation.v1.basedata.Address.Builder, com.peakwork.api.accommodation.v1.basedata.AddressOrBuilder> addressBuilder_;
    /**
     * <pre>
     * mandatory - Address of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Address address = 3;</code>
     */
    public boolean hasAddress() {
      return addressBuilder_ != null || address_ != null;
    }
    /**
     * <pre>
     * mandatory - Address of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Address address = 3;</code>
     */
    public com.peakwork.api.accommodation.v1.basedata.Address getAddress() {
      if (addressBuilder_ == null) {
        return address_ == null ? com.peakwork.api.accommodation.v1.basedata.Address.getDefaultInstance() : address_;
      } else {
        return addressBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * mandatory - Address of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Address address = 3;</code>
     */
    public Builder setAddress(com.peakwork.api.accommodation.v1.basedata.Address value) {
      if (addressBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        address_ = value;
        onChanged();
      } else {
        addressBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * mandatory - Address of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Address address = 3;</code>
     */
    public Builder setAddress(
        com.peakwork.api.accommodation.v1.basedata.Address.Builder builderForValue) {
      if (addressBuilder_ == null) {
        address_ = builderForValue.build();
        onChanged();
      } else {
        addressBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * mandatory - Address of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Address address = 3;</code>
     */
    public Builder mergeAddress(com.peakwork.api.accommodation.v1.basedata.Address value) {
      if (addressBuilder_ == null) {
        if (address_ != null) {
          address_ =
            com.peakwork.api.accommodation.v1.basedata.Address.newBuilder(address_).mergeFrom(value).buildPartial();
        } else {
          address_ = value;
        }
        onChanged();
      } else {
        addressBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * mandatory - Address of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Address address = 3;</code>
     */
    public Builder clearAddress() {
      if (addressBuilder_ == null) {
        address_ = null;
        onChanged();
      } else {
        address_ = null;
        addressBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * mandatory - Address of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Address address = 3;</code>
     */
    public com.peakwork.api.accommodation.v1.basedata.Address.Builder getAddressBuilder() {
      
      onChanged();
      return getAddressFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * mandatory - Address of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Address address = 3;</code>
     */
    public com.peakwork.api.accommodation.v1.basedata.AddressOrBuilder getAddressOrBuilder() {
      if (addressBuilder_ != null) {
        return addressBuilder_.getMessageOrBuilder();
      } else {
        return address_ == null ?
            com.peakwork.api.accommodation.v1.basedata.Address.getDefaultInstance() : address_;
      }
    }
    /**
     * <pre>
     * mandatory - Address of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Address address = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.peakwork.api.accommodation.v1.basedata.Address, com.peakwork.api.accommodation.v1.basedata.Address.Builder, com.peakwork.api.accommodation.v1.basedata.AddressOrBuilder> 
        getAddressFieldBuilder() {
      if (addressBuilder_ == null) {
        addressBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.peakwork.api.accommodation.v1.basedata.Address, com.peakwork.api.accommodation.v1.basedata.Address.Builder, com.peakwork.api.accommodation.v1.basedata.AddressOrBuilder>(
                getAddress(),
                getParentForChildren(),
                isClean());
        address_ = null;
      }
      return addressBuilder_;
    }

    private com.peakwork.api.accommodation.v1.basedata.Coordinates coordinates_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.peakwork.api.accommodation.v1.basedata.Coordinates, com.peakwork.api.accommodation.v1.basedata.Coordinates.Builder, com.peakwork.api.accommodation.v1.basedata.CoordinatesOrBuilder> coordinatesBuilder_;
    /**
     * <pre>
     * optional - Geographical coordinates of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Coordinates coordinates = 4;</code>
     */
    public boolean hasCoordinates() {
      return coordinatesBuilder_ != null || coordinates_ != null;
    }
    /**
     * <pre>
     * optional - Geographical coordinates of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Coordinates coordinates = 4;</code>
     */
    public com.peakwork.api.accommodation.v1.basedata.Coordinates getCoordinates() {
      if (coordinatesBuilder_ == null) {
        return coordinates_ == null ? com.peakwork.api.accommodation.v1.basedata.Coordinates.getDefaultInstance() : coordinates_;
      } else {
        return coordinatesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * optional - Geographical coordinates of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Coordinates coordinates = 4;</code>
     */
    public Builder setCoordinates(com.peakwork.api.accommodation.v1.basedata.Coordinates value) {
      if (coordinatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        coordinates_ = value;
        onChanged();
      } else {
        coordinatesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * optional - Geographical coordinates of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Coordinates coordinates = 4;</code>
     */
    public Builder setCoordinates(
        com.peakwork.api.accommodation.v1.basedata.Coordinates.Builder builderForValue) {
      if (coordinatesBuilder_ == null) {
        coordinates_ = builderForValue.build();
        onChanged();
      } else {
        coordinatesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * optional - Geographical coordinates of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Coordinates coordinates = 4;</code>
     */
    public Builder mergeCoordinates(com.peakwork.api.accommodation.v1.basedata.Coordinates value) {
      if (coordinatesBuilder_ == null) {
        if (coordinates_ != null) {
          coordinates_ =
            com.peakwork.api.accommodation.v1.basedata.Coordinates.newBuilder(coordinates_).mergeFrom(value).buildPartial();
        } else {
          coordinates_ = value;
        }
        onChanged();
      } else {
        coordinatesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * optional - Geographical coordinates of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Coordinates coordinates = 4;</code>
     */
    public Builder clearCoordinates() {
      if (coordinatesBuilder_ == null) {
        coordinates_ = null;
        onChanged();
      } else {
        coordinates_ = null;
        coordinatesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * optional - Geographical coordinates of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Coordinates coordinates = 4;</code>
     */
    public com.peakwork.api.accommodation.v1.basedata.Coordinates.Builder getCoordinatesBuilder() {
      
      onChanged();
      return getCoordinatesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * optional - Geographical coordinates of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Coordinates coordinates = 4;</code>
     */
    public com.peakwork.api.accommodation.v1.basedata.CoordinatesOrBuilder getCoordinatesOrBuilder() {
      if (coordinatesBuilder_ != null) {
        return coordinatesBuilder_.getMessageOrBuilder();
      } else {
        return coordinates_ == null ?
            com.peakwork.api.accommodation.v1.basedata.Coordinates.getDefaultInstance() : coordinates_;
      }
    }
    /**
     * <pre>
     * optional - Geographical coordinates of the accommodation
     * </pre>
     *
     * <code>.peakwork.api.accommodation.v1.basedata.Coordinates coordinates = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.peakwork.api.accommodation.v1.basedata.Coordinates, com.peakwork.api.accommodation.v1.basedata.Coordinates.Builder, com.peakwork.api.accommodation.v1.basedata.CoordinatesOrBuilder> 
        getCoordinatesFieldBuilder() {
      if (coordinatesBuilder_ == null) {
        coordinatesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.peakwork.api.accommodation.v1.basedata.Coordinates, com.peakwork.api.accommodation.v1.basedata.Coordinates.Builder, com.peakwork.api.accommodation.v1.basedata.CoordinatesOrBuilder>(
                getCoordinates(),
                getParentForChildren(),
                isClean());
        coordinates_ = null;
      }
      return coordinatesBuilder_;
    }

    private com.google.protobuf.LazyStringList arrivalAirports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureArrivalAirportsIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        arrivalAirports_ = new com.google.protobuf.LazyStringArrayList(arrivalAirports_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <pre>
     * optional - List of airports, that can be used for arrival at the accommodation. Each entry denotes an airport in
     * IATA code format.
     * </pre>
     *
     * <code>repeated string arrival_airports = 5;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getArrivalAirportsList() {
      return arrivalAirports_.getUnmodifiableView();
    }
    /**
     * <pre>
     * optional - List of airports, that can be used for arrival at the accommodation. Each entry denotes an airport in
     * IATA code format.
     * </pre>
     *
     * <code>repeated string arrival_airports = 5;</code>
     */
    public int getArrivalAirportsCount() {
      return arrivalAirports_.size();
    }
    /**
     * <pre>
     * optional - List of airports, that can be used for arrival at the accommodation. Each entry denotes an airport in
     * IATA code format.
     * </pre>
     *
     * <code>repeated string arrival_airports = 5;</code>
     */
    public java.lang.String getArrivalAirports(int index) {
      return arrivalAirports_.get(index);
    }
    /**
     * <pre>
     * optional - List of airports, that can be used for arrival at the accommodation. Each entry denotes an airport in
     * IATA code format.
     * </pre>
     *
     * <code>repeated string arrival_airports = 5;</code>
     */
    public com.google.protobuf.ByteString
        getArrivalAirportsBytes(int index) {
      return arrivalAirports_.getByteString(index);
    }
    /**
     * <pre>
     * optional - List of airports, that can be used for arrival at the accommodation. Each entry denotes an airport in
     * IATA code format.
     * </pre>
     *
     * <code>repeated string arrival_airports = 5;</code>
     */
    public Builder setArrivalAirports(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureArrivalAirportsIsMutable();
      arrivalAirports_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of airports, that can be used for arrival at the accommodation. Each entry denotes an airport in
     * IATA code format.
     * </pre>
     *
     * <code>repeated string arrival_airports = 5;</code>
     */
    public Builder addArrivalAirports(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureArrivalAirportsIsMutable();
      arrivalAirports_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of airports, that can be used for arrival at the accommodation. Each entry denotes an airport in
     * IATA code format.
     * </pre>
     *
     * <code>repeated string arrival_airports = 5;</code>
     */
    public Builder addAllArrivalAirports(
        java.lang.Iterable<java.lang.String> values) {
      ensureArrivalAirportsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, arrivalAirports_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of airports, that can be used for arrival at the accommodation. Each entry denotes an airport in
     * IATA code format.
     * </pre>
     *
     * <code>repeated string arrival_airports = 5;</code>
     */
    public Builder clearArrivalAirports() {
      arrivalAirports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional - List of airports, that can be used for arrival at the accommodation. Each entry denotes an airport in
     * IATA code format.
     * </pre>
     *
     * <code>repeated string arrival_airports = 5;</code>
     */
    public Builder addArrivalAirportsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureArrivalAirportsIsMutable();
      arrivalAirports_.add(value);
      onChanged();
      return this;
    }

    private double starRating_ ;
    /**
     * <pre>
     * mandatory - Accommodation rating in form of stars. Possible values from 0-7 in steps of 0.5:
     * [ 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6,5, 7 ]
     * </pre>
     *
     * <code>double star_rating = 6;</code>
     */
    public double getStarRating() {
      return starRating_;
    }
    /**
     * <pre>
     * mandatory - Accommodation rating in form of stars. Possible values from 0-7 in steps of 0.5:
     * [ 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6,5, 7 ]
     * </pre>
     *
     * <code>double star_rating = 6;</code>
     */
    public Builder setStarRating(double value) {
      
      starRating_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * mandatory - Accommodation rating in form of stars. Possible values from 0-7 in steps of 0.5:
     * [ 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6,5, 7 ]
     * </pre>
     *
     * <code>double star_rating = 6;</code>
     */
    public Builder clearStarRating() {
      
      starRating_ = 0D;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> bookingPayload_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetBookingPayload() {
      if (bookingPayload_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BookingPayloadDefaultEntryHolder.defaultEntry);
      }
      return bookingPayload_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableBookingPayload() {
      onChanged();;
      if (bookingPayload_ == null) {
        bookingPayload_ = com.google.protobuf.MapField.newMapField(
            BookingPayloadDefaultEntryHolder.defaultEntry);
      }
      if (!bookingPayload_.isMutable()) {
        bookingPayload_ = bookingPayload_.copy();
      }
      return bookingPayload_;
    }

    public int getBookingPayloadCount() {
      return internalGetBookingPayload().getMap().size();
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 7;</code>
     */

    public boolean containsBookingPayload(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetBookingPayload().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBookingPayloadMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getBookingPayload() {
      return getBookingPayloadMap();
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 7;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getBookingPayloadMap() {
      return internalGetBookingPayload().getMap();
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 7;</code>
     */

    public java.lang.String getBookingPayloadOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetBookingPayload().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 7;</code>
     */

    public java.lang.String getBookingPayloadOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetBookingPayload().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearBookingPayload() {
      internalGetMutableBookingPayload().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 7;</code>
     */

    public Builder removeBookingPayload(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableBookingPayload().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableBookingPayload() {
      return internalGetMutableBookingPayload().getMutableMap();
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 7;</code>
     */
    public Builder putBookingPayload(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableBookingPayload().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
     * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
     * correctly book the offer in its system.
     * </pre>
     *
     * <code>map&lt;string, string&gt; booking_payload = 7;</code>
     */

    public Builder putAllBookingPayload(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableBookingPayload().getMutableMap()
          .putAll(values);
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:peakwork.api.accommodation.v1.basedata.Accommodation)
  }

  // @@protoc_insertion_point(class_scope:peakwork.api.accommodation.v1.basedata.Accommodation)
  private static final com.peakwork.api.accommodation.v1.basedata.Accommodation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.peakwork.api.accommodation.v1.basedata.Accommodation();
  }

  public static com.peakwork.api.accommodation.v1.basedata.Accommodation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Accommodation>
      PARSER = new com.google.protobuf.AbstractParser<Accommodation>() {
    @java.lang.Override
    public Accommodation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Accommodation(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Accommodation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Accommodation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.peakwork.api.accommodation.v1.basedata.Accommodation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

