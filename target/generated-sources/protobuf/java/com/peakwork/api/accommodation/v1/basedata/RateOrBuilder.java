// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basedata.proto

package com.peakwork.api.accommodation.v1.basedata;

public interface RateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:peakwork.api.accommodation.v1.basedata.Rate)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * mandatory - Identifies a rate within the scope of one supplier, i.e. it must be unique per supplier. A supplier
   * can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same rate
   * from the supplier's system has the same rate_identifier, whenever it is referenced in the Accommodation API. This
   * is especially important, when updating rate data. Data of a rate with the same identifier will be replaced, since
   * they are considered to reference the same rate entity.
   * </pre>
   *
   * <code>string rate_identifier = 1;</code>
   */
  java.lang.String getRateIdentifier();
  /**
   * <pre>
   * mandatory - Identifies a rate within the scope of one supplier, i.e. it must be unique per supplier. A supplier
   * can choose the identifier arbitrarily but must make sure, that the identifier is consistent, i.e. the same rate
   * from the supplier's system has the same rate_identifier, whenever it is referenced in the Accommodation API. This
   * is especially important, when updating rate data. Data of a rate with the same identifier will be replaced, since
   * they are considered to reference the same rate entity.
   * </pre>
   *
   * <code>string rate_identifier = 1;</code>
   */
  com.google.protobuf.ByteString
      getRateIdentifierBytes();

  /**
   * <pre>
   * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
   */
  java.util.List<com.peakwork.api.accommodation.v1.common.GlobalType> 
      getGlobalTypesList();
  /**
   * <pre>
   * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
   */
  com.peakwork.api.accommodation.v1.common.GlobalType getGlobalTypes(int index);
  /**
   * <pre>
   * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
   */
  int getGlobalTypesCount();
  /**
   * <pre>
   * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
   */
  java.util.List<? extends com.peakwork.api.accommodation.v1.common.GlobalTypeOrBuilder> 
      getGlobalTypesOrBuilderList();
  /**
   * <pre>
   * optional - List of DRV GlobalTypes giving meta information about the rate (i.e. all offers for the rate)
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.GlobalType global_types = 2;</code>
   */
  com.peakwork.api.accommodation.v1.common.GlobalTypeOrBuilder getGlobalTypesOrBuilder(
      int index);

  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 3;</code>
   */
  int getBookingPayloadCount();
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 3;</code>
   */
  boolean containsBookingPayload(
      java.lang.String key);
  /**
   * Use {@link #getBookingPayloadMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getBookingPayload();
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 3;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getBookingPayloadMap();
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 3;</code>
   */

  java.lang.String getBookingPayloadOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * optional - Meta information used for booking purposes. These are arbitrary key-value pairs, that are transported
   * back to the supplier, when a booking of an offer for this rate is made, in order for the supplier to be able to
   * correctly book the offer in its system.
   * </pre>
   *
   * <code>map&lt;string, string&gt; booking_payload = 3;</code>
   */

  java.lang.String getBookingPayloadOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * mandatory - Denotes, whether the rate is refundable (true) or not (false).
   * </pre>
   *
   * <code>bool refundable = 4;</code>
   */
  boolean getRefundable();

  /**
   * <pre>
   * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
   * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
   */
  java.util.List<com.peakwork.api.accommodation.v1.basedata.TargetCompanyType> getTargetCompaniesList();
  /**
   * <pre>
   * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
   * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
   */
  int getTargetCompaniesCount();
  /**
   * <pre>
   * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
   * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
   */
  com.peakwork.api.accommodation.v1.basedata.TargetCompanyType getTargetCompanies(int index);
  /**
   * <pre>
   * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
   * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
   */
  java.util.List<java.lang.Integer>
  getTargetCompaniesValueList();
  /**
   * <pre>
   * optional - List of company types, that the rate is valid for. This is an indicator for the distribution partners of
   * to which type of company (B2B) they are allowed to resell the offers to. If not given, no restriction is applied.
   * </pre>
   *
   * <code>repeated .peakwork.api.accommodation.v1.basedata.TargetCompanyType target_companies = 5;</code>
   */
  int getTargetCompaniesValue(int index);

  /**
   * <pre>
   * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
   * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
   * given, no country restriction is applied.
   * </pre>
   *
   * <code>repeated string target_country = 6;</code>
   */
  java.util.List<java.lang.String>
      getTargetCountryList();
  /**
   * <pre>
   * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
   * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
   * given, no country restriction is applied.
   * </pre>
   *
   * <code>repeated string target_country = 6;</code>
   */
  int getTargetCountryCount();
  /**
   * <pre>
   * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
   * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
   * given, no country restriction is applied.
   * </pre>
   *
   * <code>repeated string target_country = 6;</code>
   */
  java.lang.String getTargetCountry(int index);
  /**
   * <pre>
   * optional - List of countries, that the rate is valid for. This is an indicator for the distribution partners of
   * which countries they are allowed to sell the offers in. Countries are given as ISO 3166-1 Alpha-2 code. If not
   * given, no country restriction is applied.
   * </pre>
   *
   * <code>repeated string target_country = 6;</code>
   */
  com.google.protobuf.ByteString
      getTargetCountryBytes(int index);
}
